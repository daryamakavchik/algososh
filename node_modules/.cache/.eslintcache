[{"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx":"1","/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts":"2","/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx":"3","/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx":"4","/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx":"5","/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx":"6","/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx":"7","/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx":"8","/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx":"9","/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx":"10","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx":"11","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx":"12","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx":"13","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx":"14","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx":"15","/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts":"16","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx":"17","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx":"18","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx":"19","/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts":"20","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx":"21","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx":"22"},{"size":614,"mtime":1667493838004,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1667493838005,"results":"25","hashOfConfig":"24"},{"size":1234,"mtime":1667493837999,"results":"26","hashOfConfig":"24"},{"size":229,"mtime":1667493837999,"results":"27","hashOfConfig":"24"},{"size":241,"mtime":1667493837999,"results":"28","hashOfConfig":"24"},{"size":2096,"mtime":1667535979507,"results":"29","hashOfConfig":"24"},{"size":2136,"mtime":1667493837999,"results":"30","hashOfConfig":"24"},{"size":2503,"mtime":1667525925479,"results":"31","hashOfConfig":"24"},{"size":6527,"mtime":1667594794133,"results":"32","hashOfConfig":"24"},{"size":223,"mtime":1667493838000,"results":"33","hashOfConfig":"24"},{"size":1272,"mtime":1667493838001,"results":"34","hashOfConfig":"24"},{"size":603,"mtime":1667493838001,"results":"35","hashOfConfig":"24"},{"size":691,"mtime":1667493838001,"results":"36","hashOfConfig":"24"},{"size":1048,"mtime":1667524299761,"results":"37","hashOfConfig":"24"},{"size":1374,"mtime":1667493838000,"results":"38","hashOfConfig":"24"},{"size":82,"mtime":1667493838005,"results":"39","hashOfConfig":"24"},{"size":707,"mtime":1667493838001,"results":"40","hashOfConfig":"24"},{"size":664,"mtime":1667493838001,"results":"41","hashOfConfig":"24"},{"size":1588,"mtime":1667493838000,"results":"42","hashOfConfig":"24"},{"size":103,"mtime":1667493838005,"results":"43","hashOfConfig":"24"},{"size":606,"mtime":1667493838000,"results":"44","hashOfConfig":"24"},{"size":635,"mtime":1667493838001,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ho7ngv",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx",["116"],[],"import React, { useState, ChangeEvent } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { TArray } from \"../../types/string\";\nimport styles from \"./fibonacci-page.module.css\";\n\nexport const FibonacciPage: React.FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [inputArr, setInputArr] = useState<Array<number>>([]);\n  const [loader, setLoader] = useState(false);\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const displayfib = async (n: string) => {\n    const arr = countfib(Number(inputValue));\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      setInputArr(arr.slice(0, i + 1));\n    }\n    setLoader(false);\n  }\n\n  const countfib = (n:number):number[] => {\n    let arr: number[] = [0, 1];\n    for (let i = 2; i < +n + 1; i++) {\n      arr.push(arr[i - 2] + arr[i - 1]);\n      setInputArr([...arr]);\n    }\n    return arr;\n  }\n\n  const handleDisplay = () => {\n    displayfib(inputValue);\n  };\n\n  return (\n    <SolutionLayout title=\"Последовательность Фибоначчи\">\n        <div className={styles.container}>\n        <div className={styles.inputcontainer}>\n          <Input\n            value={inputValue}\n            isLimitText={true}\n            maxLength={11}\n            onChange={onInputChange}\n          />\n          <div className={styles.button}>\n            <Button\n              text=\"Рассчитать\"\n              isLoader={loader}\n              disabled={inputValue === \"\" ? true : false}\n              onClick={handleDisplay}\n            />\n          </div>\n        </div>\n        <ul className={styles.circlecontainer}>\n          {inputArr &&\n            inputArr.map((item, index) => (\n              <li key={index}>\n                <Circle letter={item.toString()} />\n              </li>\n            ))}\n        </ul>\n      </div>\n    </SolutionLayout>\n  );\n}\n",["117","118"],"/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx",[],[],["119","120"],"/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx",["121","122","123"],[],"import React, { useState, useEffect } from \"react\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { Button } from \"../ui/button/button\";\nimport { Column } from \"../ui/column/column\";\nimport styles from \"./sorting-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { TArray } from \"../../types/sort\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Direction } from \"../../types/direction\";\n\nexport const SortingPage: React.FC = () => {\n  const [arr, setArr] = useState<TArray[]>([]);\n  const [sortType, setSortType] = useState(\"выбор\");\n  const [direction, setDirection] = useState<Direction>();\n  const [loader, setLoader] = useState(false);\n\n  const sortAscendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    \n    for (let i = 0; i < arr.length - 1; i++) {\n      let minInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value < arr[minInd].value) {\n          minInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[minInd].value] = [arr[minInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortDescendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length - 1; i++) {\n      let maxInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value > arr[maxInd].value) {\n          maxInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[maxInd].value] = [arr[maxInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortAscendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value > arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n\n        arr[j].color = ElementStates.Default;\n      }\n\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const sortDescendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value < arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n\n        arr[j].color = ElementStates.Default;\n      }\n\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const handleClick = (direction: Direction) => {\n    setDirection(direction);\n\n    if (sortType === \"выбор\" && direction === Direction.Ascending) {\n      sortAscendingSelect(arr);\n    }\n    if (sortType === \"выбор\" && direction === Direction.Descending) {\n      sortDescendingSelect(arr);\n    }\n    if (sortType === \"пузырёк\" && direction === Direction.Ascending) {\n      sortAscendingBubble(arr);\n    }\n    if (sortType === \"пузырёк\" && direction === Direction.Descending) {\n      sortDescendingBubble(arr);\n    }\n  };\n\n  const changeSortType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSortType(event.target.value);\n  };\n\n  const createArr = () => {\n    const arr = [];\n    const length = Math.floor(Math.random() * (17 - 3 + 1)) + 3;\n    for (let i = 0; i < length; i++) {\n      arr.push({\n        value: Math.round(Math.random() * 100),\n        color: ElementStates.Default,\n      });\n    }\n    return arr;\n  };\n\n  const addNewArr = () => {\n    setArr([...createArr()]);\n  };\n\n  const setLoading = (direction: Direction) => {\n    if (direction === direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setDisabled = (direction: Direction) => {\n    if ((!direction && loader === true) || arr.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.radios}>\n          <RadioInput\n            label=\"Выбор\"\n            value=\"выбор\"\n            checked={sortType === \"выбор\" ? true : false}\n            onChange={changeSortType}\n            disabled={loader}\n          />\n          <RadioInput\n            label=\"Пузырёк\"\n            value=\"пузырёк\"\n            checked={sortType === \"пузырёк\" ? true : false}\n            onChange={changeSortType}\n            disabled={loader}\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"По возрастанию\"\n            sorting={Direction.Ascending}\n            onClick={() => handleClick(Direction.Ascending)}\n            disabled={setDisabled(Direction.Ascending)}\n            isLoader={setLoading(Direction.Ascending)}\n          />\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"По убыванию\"\n            sorting={Direction.Descending}\n            onClick={() => handleClick(Direction.Descending)}\n            disabled={setDisabled(Direction.Descending)}\n            isLoader={setLoading(Direction.Descending)}\n          />\n        </div>\n        <div className={styles.arrbutton}>\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"Новый массив\"\n            onClick={addNewArr}\n          />\n        </div>\n      </div>\n      <ul className={styles.columns}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index} className={styles.column}>\n              <Column index={+item.value} state={item.color} />\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n","/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx",[],[],{"ruleId":"124","severity":1,"message":"125","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"124","severity":1,"message":"134","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"135","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":150,"column":9,"nodeType":"138","messageId":"139","endLine":150,"endColumn":32},"@typescript-eslint/no-unused-vars","'TArray' is defined but never used.","Identifier","unusedVar","no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"'useEffect' is defined but never used.","'direction' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-global-assign","no-unsafe-negation"]