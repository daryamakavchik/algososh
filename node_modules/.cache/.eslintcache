[{"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx":"1","/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts":"2","/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx":"3","/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx":"4","/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx":"5","/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx":"6","/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx":"7","/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx":"8","/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx":"9","/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx":"10","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx":"11","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx":"12","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx":"13","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx":"14","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx":"15","/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts":"16","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx":"17","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx":"18","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx":"19","/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts":"20","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx":"21","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx":"22","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/arrow-icon.tsx":"23","/Users/daryamakauchyk/Desktop/algososh/src/utils/functions.ts":"24"},{"size":614,"mtime":1667493838004,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1667493838005,"results":"27","hashOfConfig":"26"},{"size":1234,"mtime":1667493837999,"results":"28","hashOfConfig":"26"},{"size":4487,"mtime":1667967977593,"results":"29","hashOfConfig":"26"},{"size":13446,"mtime":1667968195087,"results":"30","hashOfConfig":"26"},{"size":1997,"mtime":1667967440449,"results":"31","hashOfConfig":"26"},{"size":2136,"mtime":1667493837999,"results":"32","hashOfConfig":"26"},{"size":2367,"mtime":1667967739961,"results":"33","hashOfConfig":"26"},{"size":6406,"mtime":1667967907922,"results":"34","hashOfConfig":"26"},{"size":3033,"mtime":1667968019888,"results":"35","hashOfConfig":"26"},{"size":1272,"mtime":1667493838001,"results":"36","hashOfConfig":"26"},{"size":603,"mtime":1667493838001,"results":"37","hashOfConfig":"26"},{"size":691,"mtime":1667493838001,"results":"38","hashOfConfig":"26"},{"size":1178,"mtime":1667966898576,"results":"39","hashOfConfig":"26"},{"size":1374,"mtime":1667493838000,"results":"40","hashOfConfig":"26"},{"size":82,"mtime":1667493838005,"results":"41","hashOfConfig":"26"},{"size":707,"mtime":1667493838001,"results":"42","hashOfConfig":"26"},{"size":664,"mtime":1667493838001,"results":"43","hashOfConfig":"26"},{"size":1588,"mtime":1667493838000,"results":"44","hashOfConfig":"26"},{"size":103,"mtime":1667493838005,"results":"45","hashOfConfig":"26"},{"size":606,"mtime":1667493838000,"results":"46","hashOfConfig":"26"},{"size":635,"mtime":1667493838001,"results":"47","hashOfConfig":"26"},{"size":672,"mtime":1667493838001,"results":"48","hashOfConfig":"26"},{"size":1006,"mtime":1667968196764,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ho7ngv",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx",["125"],[],"import React, { useState, ChangeEvent } from \"react\";\nimport { IQueue, TQueueItem } from \"../../types/queue\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { delay } from \"../../utils/functions\";\nimport styles from \"./queue-page.module.css\";\n\nexport class Queue<T> implements IQueue<T> {\n  private container: (T | null)[] = [];\n  private head = 0;\n  private tail = 0;\n  private readonly size: number = 0;\n  private length: number = 0;\n\n  constructor(size: number) {\n    this.size = size;\n    this.container = Array(size);\n  }\n\n  enqueue = (item: T) => {\n    if (this.length >= this.size) {\n      throw new Error(\"Maximum length exceeded\");\n    }\n    this.container[this.tail % this.size] = item;\n    this.tail++;\n    this.length++;\n  };\n\n  dequeue = () => {\n    if (this.isEmpty()) {\n      throw new Error(\"No elements in the queue\");\n    }\n    this.container[this.head % this.size] = null;\n    this.head++;\n    this.length--;\n  };\n\n  isEmpty = () => this.length === 0;\n\n  peek = (): T | null => {\n    if (this.isEmpty()) {\n      throw new Error(\"No elements in the queue\");\n    }\n    return this.container[this.head % this.size];\n  };\n\n  clear = () => {\n    this.head = 0;\n    this.tail = 0;\n    this.container = [];\n    this.length = 0;\n  };\n\n  getHead = () => {\n    return this.head;\n  };\n\n  getTail = () => {\n    return this.tail;\n  };\n}\n\nexport const QueuePage: React.FC = () => {\n  const defaultQueue = Array.from({ length: 7 }, () => ({\n    value: \"\",\n    color: ElementStates.Default,\n  }));\n  const [arr, setArr] = useState<TQueueItem[]>(defaultQueue);\n  const [queue, setQueue] = useState(new Queue<TQueueItem>(7));\n  const [inputValue, setInputValue] = useState(\"\");\n  const [buttons, setDisabledButtons] = useState(false);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddNumber = async () => {\n    if (inputValue) {\n      setInputValue(\"\");\n      queue.enqueue({ value: inputValue, color: ElementStates.Default });\n      setQueue(queue);\n\n      arr[queue.getTail() - 1] = { value: \"\", color: ElementStates.Changing };\n      setArr([...arr]);\n\n      await delay(500);\n      arr[queue.getTail() - 1] = { value: inputValue, color: ElementStates.Changing };\n      setArr([...arr]);\n\n      arr[queue.getTail() - 1] = { value: inputValue, color: ElementStates.Default };\n      setArr([...arr]);\n    }\n  };\n\n  const handleDeleteNumber = async () => {\n    setDisabledButtons(true);\n    queue.dequeue();\n    setQueue(queue);\n\n    arr[queue.getHead() - 1] = { value: arr[queue.getHead() - 1].value, color: ElementStates.Changing };\n    setArr([...arr]);\n\n    await delay(500);\n    arr[queue.getHead() - 1] = { value: \"\", color: ElementStates.Default };\n    setArr([...arr]);\n\n    if (queue.getHead() === 7 && queue.getTail() === 7 && queue.isEmpty()) {\n      arr[queue.getHead() - 1] = { value: \"\", color: ElementStates.Default, head: \"head\" };\n      setArr([...arr]);\n    }\n\n    setDisabledButtons(false);\n  };\n\n  const handleClearQueue = () => {\n    queue.clear();\n    setQueue(queue);\n    setArr(defaultQueue);\n  };\n\n  return (\n    <SolutionLayout title=\"Очередь\">\n      <div className={styles.container}>\n        <Input\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onChange}\n        />\n        <Button\n          text=\"Добавить\"\n          onClick={handleAddNumber}\n          disabled={inputValue === \"\"}\n        />\n        <Button\n          text=\"Удалить\"\n          onClick={handleDeleteNumber}\n          disabled={!arr.length}\n        />\n        <Button\n          text=\"Очистить\"\n          onClick={handleClearQueue}\n          disabled={!arr.length}\n        />\n      </div>\n      <ul className={styles.circles} >\n          {arr && arr.slice(0, 7).map((item, index) =>\n            <li key={index}>\n              <Circle\n                letter={item.value}\n                index={index}\n                state={item.color}\n                head={(index === queue.getHead() && !queue.isEmpty()) || item.head ? 'head' : ''}\n                tail={(index === queue.getTail() - 1 && !queue.isEmpty()) ? 'tail' : ''} />\n            </li>)}\n        </ul>\n    </SolutionLayout>\n  );\n};\n",["126","127"],"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx",["128","129"],[],"import React, { useState } from \"react\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { Button } from \"../ui/button/button\";\nimport { Column } from \"../ui/column/column\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { TArray } from \"../../types/sort\";\nimport { Direction } from \"../../types/direction\";\nimport { delay, createArr } from \"../../utils/functions\";\nimport styles from \"./sorting-page.module.css\";\n\nexport const SortingPage: React.FC = () => {\n  const [arr, setArr] = useState<TArray[]>([]);\n  const [sortType, setSortType] = useState(\"выбор\");\n  const [direction, setDirection] = useState<Direction>();\n  const [loader, setLoader] = useState(false);\n\n  const addNewArr = () => {\n    setArr([...createArr()]);\n  };\n\n  const changeSortType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSortType(event.target.value);\n  };\n\n  const setLoading = (sorting: Direction) => {\n    if (sorting === direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setDisabled = (sorting: Direction) => {\n    if (sorting !== direction && loader === true || arr.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const sortAscendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    \n    for (let i = 0; i < arr.length - 1; i++) {\n      let minInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        await delay(500);\n        if (arr[j].value < arr[minInd].value) {\n          minInd = j;\n        }\n        arr[j].color = ElementStates.Default;\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[minInd].value] = [arr[minInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortDescendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length - 1; i++) {\n      let maxInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        await delay(500);\n        if (arr[j].value > arr[maxInd].value) {\n          maxInd = j;\n        }\n        arr[j].color = ElementStates.Default;\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[maxInd].value] = [arr[maxInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortAscendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        await delay(500);\n        if (arr[j].value > arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n        arr[j].color = ElementStates.Default;\n      }\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const sortDescendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        await delay(500);\n        if (arr[j].value < arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n        arr[j].color = ElementStates.Default;\n      }\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const handleClick = (direction: Direction) => {\n    setDirection(direction);\n\n    if (sortType === \"выбор\" && direction === Direction.Ascending) {\n      sortAscendingSelect(arr);\n    }\n    if (sortType === \"выбор\" && direction === Direction.Descending) {\n      sortDescendingSelect(arr);\n    }\n    if (sortType === \"пузырёк\" && direction === Direction.Ascending) {\n      sortAscendingBubble(arr);\n    }\n    if (sortType === \"пузырёк\" && direction === Direction.Descending) {\n      sortDescendingBubble(arr);\n    }\n  };\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.radios}>\n          <RadioInput\n            label=\"Выбор\"\n            value=\"выбор\"\n            checked={sortType === \"выбор\" ? true : false}\n            onChange={changeSortType}\n            disabled={loader}\n          />\n          <RadioInput\n            label=\"Пузырёк\"\n            value=\"пузырёк\"\n            checked={sortType === \"пузырёк\" ? true : false}\n            onChange={changeSortType}\n            disabled={loader}\n          />\n        </div>\n        <div className={styles.buttons}>\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"По возрастанию\"\n            sorting={Direction.Ascending}\n            onClick={() => handleClick(Direction.Ascending)}\n            disabled={setDisabled(Direction.Ascending)}\n            isLoader={setLoading(Direction.Ascending)}\n          />\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"По убыванию\"\n            sorting={Direction.Descending}\n            onClick={() => handleClick(Direction.Descending)}\n            disabled={setDisabled(Direction.Descending)}\n            isLoader={setLoading(Direction.Descending)}\n          />\n        </div>\n        <div className={styles.arrbutton}>\n          <Button\n            style={{ width: \"205px\" }}\n            text=\"Новый массив\"\n            onClick={addNewArr}\n            disabled={loader}\n          />\n        </div>\n      </div>\n      <ul className={styles.columns}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index} className={styles.column}>\n              <Column index={+item.value} state={item.color} />\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n","/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/arrow-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/utils/functions.ts",[],[],{"ruleId":"130","severity":1,"message":"131","line":74,"column":10,"nodeType":"132","messageId":"133","endLine":74,"endColumn":17},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":35,"column":31,"nodeType":"140","messageId":"141","endLine":35,"endColumn":33},{"ruleId":"138","severity":1,"message":"139","line":35,"column":50,"nodeType":"140","messageId":"141","endLine":35,"endColumn":52},"@typescript-eslint/no-unused-vars","'buttons' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]