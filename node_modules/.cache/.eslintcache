[{"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx":"1","/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts":"2","/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx":"3","/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx":"4","/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx":"5","/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx":"6","/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx":"7","/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx":"8","/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx":"9","/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx":"10","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx":"11","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx":"12","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx":"13","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx":"14","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx":"15","/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts":"16","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx":"17","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx":"18","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx":"19","/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts":"20","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx":"21","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx":"22","/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/arrow-icon.tsx":"23"},{"size":614,"mtime":1667493838004,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1667493838005,"results":"26","hashOfConfig":"25"},{"size":1234,"mtime":1667493837999,"results":"27","hashOfConfig":"25"},{"size":4529,"mtime":1667681011112,"results":"28","hashOfConfig":"25"},{"size":9728,"mtime":1667862897220,"results":"29","hashOfConfig":"25"},{"size":2145,"mtime":1667606757885,"results":"30","hashOfConfig":"25"},{"size":2136,"mtime":1667493837999,"results":"31","hashOfConfig":"25"},{"size":2503,"mtime":1667606317957,"results":"32","hashOfConfig":"25"},{"size":6751,"mtime":1667606757885,"results":"33","hashOfConfig":"25"},{"size":3054,"mtime":1667681011112,"results":"34","hashOfConfig":"25"},{"size":1272,"mtime":1667493838001,"results":"35","hashOfConfig":"25"},{"size":603,"mtime":1667493838001,"results":"36","hashOfConfig":"25"},{"size":691,"mtime":1667493838001,"results":"37","hashOfConfig":"25"},{"size":1048,"mtime":1667524299761,"results":"38","hashOfConfig":"25"},{"size":1374,"mtime":1667493838000,"results":"39","hashOfConfig":"25"},{"size":82,"mtime":1667493838005,"results":"40","hashOfConfig":"25"},{"size":707,"mtime":1667493838001,"results":"41","hashOfConfig":"25"},{"size":664,"mtime":1667493838001,"results":"42","hashOfConfig":"25"},{"size":1588,"mtime":1667493838000,"results":"43","hashOfConfig":"25"},{"size":103,"mtime":1667493838005,"results":"44","hashOfConfig":"25"},{"size":606,"mtime":1667493838000,"results":"45","hashOfConfig":"25"},{"size":635,"mtime":1667493838001,"results":"46","hashOfConfig":"25"},{"size":672,"mtime":1667493838001,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ho7ngv",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daryamakauchyk/Desktop/algososh/src/index.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/reportWebVitals.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/app/app.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/queue-page/queue-page.tsx",["119"],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx",["120","121","122","123","124","125","126","127"],[],"import React, { useState, ChangeEvent, useMemo } from \"react\";\nimport { TListItem, ILinkedList } from \"../../types/list\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport styles from \"./list-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\n\nexport class Node<T> {\n  value: T;\n  next: Node<T> | null;\n  constructor(value: T, next?: Node<T> | null) {\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n  private head: Node<T> | null;\n  private tail: Node<T> | null;\n  private size: number;\n  private addValues(values: T[]) { values.forEach((value) => this.append(value))}\n  constructor(elements: T[]) {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n    if (elements?.length) { this.addValues(elements) }\n  }\n\n  getSize() { return this.size }\n\n  getCurr(index: number) {\n    if (index < 0 || index >= this.size) return null;\n    let counter = 0;\n    let curr = this.head;\n    while (counter !== index && curr) {\n        curr = curr?.next;\n        counter++\n    }\n    return curr;\n}\n  toArray() {\n    let curr = this.head;\n    const res = [];\n\n    while (curr) {\n      res.push(curr.value);\n      curr = curr.next;\n    }\n    return [...res];\n  }\n\n  append(element: T) {\n    let node = new Node(element);\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n      if (current) current.next = new Node(element);\n    }\n    this.size++;\n  }\n\n  prepend(element: T) {\n    const newNode = new Node(element);\n\n    // if (!this.head || !this.tail) {\n    //   this.head = newNode;\n    //   this.tail = newNode;\n    //   this.size++;\n    //   return this;\n    // }\n\n    const currentNode = this.head;\n    this.head = newNode;\n    this.head.next = currentNode;\n    this.size++;\n  }\n\n  addByIndex(element: T, index: number) {\n    const newNode = new Node(element)\n\n    if (index === 0) {\n        newNode.next = this.head;\n        this.head = newNode;\n        this.size++\n    };\n\n    let prev = this.getCurr(index - 1);\n    if (prev?.next) {\n        let temp = prev?.next;\n        prev!.next = newNode;\n        newNode!.next = temp;\n        this.size++\n    };\n    return\n};\n\n}\n\nexport const ListPage: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n\n  const getRandomNumber = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const list = useMemo(\n    () =>\n      new LinkedList<string>(\n        Array.from({ length: 4 }, () => getRandomNumber(0, 99).toString())\n      ),\n    []\n  );\n\n  const [arr, setArr] = useState<TListItem[]>( \n    list.toArray().map((item) => ({ value: item, color: ElementStates.Default }))\n  );\n  const [addedToHead, setAddedToHead] = useState(false);\n  const [removedFromHead, setRemovedFromHead] = useState(false);\n  const [addedByIndex, setAddedByIndex] = useState(false);\n  const [removedByIndex, setRemovedByIndex] = useState(false);\n  const [addedToTail, setAddedToTail] = useState(false);\n  const [removedFromTail, setRemovedFromTail] = useState(false);\n  const [indexOfInputValue, setIndexOfInputValue] = useState<number>();\n  const [loading, setLoading] = useState(false);\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndexValue(e.target.value);\n  };\n\n  const displayHead = (index: number) => {\n    if (index === 0 && !addedToHead && !addedByIndex) {\n      return \"head\";\n    } else if (index === 0 && addedByIndex && +indexValue !== 0) {\n      return \"head\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const displayTail = (index: number) => {\n    if (index === arr.length - 1 && !removedFromTail && !removedByIndex && !addedToTail) {\n      return \"tail\";\n    } else if (arr.length === 1) {\n      return \"\";\n    } else if (removedByIndex && index === arr.length - 1) {\n      return \"\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleAddToHead = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setAddedToHead(true);\n      await delay(500);\n      list.prepend(inputValue);\n      setAddedToHead(false);\n      const newArr = list.toArray().map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[0].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[0].color = ElementStates.Default;\n      setArr(newArr);\n    };\n    setInputValue('');\n    setLoading(false);\n  };\n\n\n  const handleAddToTail = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setIndexOfInputValue((list.getSize()) - 1);\n      setAddedToTail(true);\n      await delay(500);\n      list.append(inputValue);\n      setAddedToTail(false);\n      const newArr = list.toArray().map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[newArr.length - 1].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[newArr.length - 1].color = ElementStates.Default;\n      setArr(newArr);\n    };\n    setInputValue('');\n    setLoading(false);\n  };\n\n  const handleRemoveFromHead = async () => {};\n\n  const handleRemoveFromTail = async () => {};\n\n  const handleAddByIndex = async () => {\n      if (+indexValue < 5 && (list.getSize()) < 6) {\n        setLoading(true);\n        setAddedByIndex(true);\n        const newArr = list.toArray().map((item) => ({ value: item, color: ElementStates.Default }));\n        for (let i = 0; i <= +indexValue; i++) {\n          setIndexOfInputValue(i);\n          await delay(500);\n          if (i < +indexValue) {\n            newArr[i].color = ElementStates.Changing;\n            setArr(newArr);\n          };\n        };\n        setAddedByIndex(false);\n        setIndexOfInputValue(+'');\n        list.addByIndex(inputValue, +indexValue);\n        const finalArr = list.toArray().map((item) => ({ value: item, color: ElementStates.Default }));\n        finalArr[+indexValue].color = ElementStates.Modified;\n  \n        setArr(finalArr);\n        await delay(500);\n        finalArr[+indexValue].color = ElementStates.Default;\n        setArr(finalArr);\n      };\n      setLoading(false);\n      setInputValue('');\n      setIndexValue('');\n    };\n\n  const handleRemoveByIndex = async () => {};\n\n  const removeElements = ( head: Node<number> | null, val: number): Node<number> | null => {\n    if (head === null) {\n      return null;\n    }\n\n    let dummyHead = new Node(0);\n    dummyHead.next = head;\n    head = dummyHead;\n\n    while (dummyHead.next !== null) {\n      if (dummyHead.next.value === val) {\n        dummyHead.next = dummyHead.next.next;\n      } else {\n        dummyHead = dummyHead.next;\n      }\n    }\n\n    return head.next;\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите значение\"\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <Button style={{ minWidth: \"175px\" }} text=\"Добавить в head\" onClick={handleAddToHead} />\n        <Button style={{ minWidth: \"175px\" }} text=\"Добавить в tail\" onClick={handleAddToTail} />\n        <Button style={{ minWidth: \"175px\" }} text=\"Удалить из head\" />\n        <Button style={{ minWidth: \"175px\" }} text=\"Удалить из tail\" />\n      </div>\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите индекс\"\n          type=\"text\"\n          value={indexValue}\n          onChange={onIndexChange}\n        />\n        <Button style={{ minWidth: \"362px\" }} text=\"Добавить по индексу\" onClick={handleAddByIndex} />\n        <Button style={{ minWidth: \"362px\" }} text=\"Удалить по индексу\" />\n      </div>\n      <ul className={styles.circles}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index} className={styles.circlebox}>\n            {loading === true && (addedToHead === true && index === indexOfInputValue) &&\n                <div className={styles.smalltopcircle}>\n                  <Circle isSmall letter={inputValue} state={ElementStates.Changing} />\n                </div>}\n                {loading === true && (addedToTail === true && index === indexOfInputValue) &&\n                <div className={styles.smallbottomcircle}>\n                  <Circle isSmall letter={inputValue} state={ElementStates.Changing} />\n                </div>}\n                <div className={styles.bigcircle}>\n              <Circle\n                letter={item.value}\n                state={item.color}\n                index={index}\n                head={displayHead(index)}\n                tail={displayTail(index)}\n              />\n              </div>\n              {index !== arr.length - 1 && (\n                <div className={styles.arrow}>\n                  <ArrowIcon />\n                </div>\n              )}\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n","/Users/daryamakauchyk/Desktop/algososh/src/components/fibonacci-page/fibonacci-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/main-page/main-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx",[],[],["128","129"],"/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx",["130","131"],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/solution-layout/solution-layout.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/return-button/return-button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/return-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/input/input.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/button/button.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/direction.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/descending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/ascending-icon.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/circle/circle.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/types/element-states.ts",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/column/column.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/radio-input/radio-input.tsx",[],[],"/Users/daryamakauchyk/Desktop/algososh/src/components/ui/icons/arrow-icon.tsx",[],[],{"ruleId":"132","severity":1,"message":"133","line":72,"column":10,"nodeType":"134","messageId":"135","endLine":72,"endColumn":17},{"ruleId":"132","severity":1,"message":"136","line":126,"column":10,"nodeType":"134","messageId":"135","endLine":126,"endColumn":25},{"ruleId":"132","severity":1,"message":"137","line":126,"column":27,"nodeType":"134","messageId":"135","endLine":126,"endColumn":45},{"ruleId":"132","severity":1,"message":"138","line":128,"column":26,"nodeType":"134","messageId":"135","endLine":128,"endColumn":43},{"ruleId":"132","severity":1,"message":"139","line":130,"column":27,"nodeType":"134","messageId":"135","endLine":130,"endColumn":45},{"ruleId":"132","severity":1,"message":"140","line":208,"column":9,"nodeType":"134","messageId":"135","endLine":208,"endColumn":29},{"ruleId":"132","severity":1,"message":"141","line":210,"column":9,"nodeType":"134","messageId":"135","endLine":210,"endColumn":29},{"ruleId":"132","severity":1,"message":"142","line":241,"column":9,"nodeType":"134","messageId":"135","endLine":241,"endColumn":28},{"ruleId":"132","severity":1,"message":"143","line":243,"column":9,"nodeType":"134","messageId":"135","endLine":243,"endColumn":23},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":164,"column":31,"nodeType":"150","messageId":"151","endLine":164,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":164,"column":50,"nodeType":"150","messageId":"151","endLine":164,"endColumn":52},"@typescript-eslint/no-unused-vars","'buttons' is assigned a value but never used.","Identifier","unusedVar","'removedFromHead' is assigned a value but never used.","'setRemovedFromHead' is assigned a value but never used.","'setRemovedByIndex' is assigned a value but never used.","'setRemovedFromTail' is assigned a value but never used.","'handleRemoveFromHead' is assigned a value but never used.","'handleRemoveFromTail' is assigned a value but never used.","'handleRemoveByIndex' is assigned a value but never used.","'removeElements' is assigned a value but never used.","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation"]