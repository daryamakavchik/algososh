{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport styles from './string.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StringComponent = () => {\n  _s();\n\n  const [inputState, setInputState] = useState('');\n\n  const onInputChange = e => {\n    const input = document.querySelector('.text_type_input');\n    input === null || input === void 0 ? void 0 : input.addEventListener('input', () => {\n      setInputState(e.target.value);\n    });\n  };\n\n  const addDigit = () => {};\n\n  const container = document.querySelector('container');\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0440\\u043E\\u043A\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        isLimitText: true,\n        maxLength: 11,\n        onChange: e => onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StringComponent, \"joNhSeGL6pFLZ5GrNH8Q4OkUhsg=\");\n\n_c = StringComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StringComponent\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx"],"names":["React","useState","SolutionLayout","Input","Button","styles","StringComponent","inputState","setInputState","onInputChange","e","input","document","querySelector","addEventListener","target","value","addDigit","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAAA;;AAC7C,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMQ,aAAa,GAAIC,CAAD,IAA4C;AAChE,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAd;AACAF,IAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACrCN,MAAAA,aAAa,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAb;AACD,KAFD;AAGD,GALD;;AAMA,QAAMC,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAGA,QAAMC,SAAS,GAAGN,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAlB;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,sCAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACa,SAAvB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,WAAW,MAAlB;AAAmB,QAAA,SAAS,EAAE,EAA9B;AAAkC,QAAA,QAAQ,EAAGR,CAAD,IAAOD;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,8DAAb;AAA0B,QAAA,QAAQ;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArBM;;GAAMH,e;;KAAAA,e","sourcesContent":["import React, {useState} from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from './string.module.css';\n\nexport const StringComponent: React.FC = () => {\n  const [inputState, setInputState] = useState('');\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const input = document.querySelector('.text_type_input');\n    input?.addEventListener('input', () => {\n      setInputState(e.target.value);\n    })\n  }\n  const addDigit = () => {\n\n  }\n  const container = document.querySelector('container');\n  \n  return (\n    <SolutionLayout title=\"Строка\">\n      <div className={styles.container}>\n        <Input isLimitText maxLength={11} onChange={(e) => onInputChange} />\n        <Button text=\"Развернуть\" disabled />\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}