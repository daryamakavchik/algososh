{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { delay } from \"../../utils/functions\";\nimport { ElementStates } from \"../../types/element-states\";\nimport styles from \"./string.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StringComponent = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputArr, setInputArr] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const onInputChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const swap = (arr, firstIndex, secondIndex) => {\n    const temp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = temp;\n    return arr;\n  };\n\n  const reverse = async arr => {\n    setLoader(true);\n    const mid = Math.ceil(arr.length / 2);\n\n    for (let i = 0; i < mid; i++) {\n      let j = arr.length - 1 - i;\n\n      if (i !== j) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setInputArr([...arr]);\n        await delay(1000);\n      }\n\n      swap(arr, i, j);\n      arr[i].color = ElementStates.Modified;\n      arr[j].color = ElementStates.Modified;\n      setInputArr([...arr]);\n    }\n\n    setLoader(false);\n  };\n\n  const handleReverse = () => {\n    const newArr = inputValue.split(\"\").map(value => ({\n      value,\n      color: ElementStates.Default\n    }));\n    reverse(newArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0440\\u043E\\u043A\\u0430\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputcontainer,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: inputValue,\n          isLimitText: true,\n          maxLength: 11,\n          onChange: onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.button,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\",\n            isLoader: loader,\n            disabled: inputValue === \"\" ? true : false,\n            onClick: handleReverse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.circlecontainer,\n        children: inputArr && inputArr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item.value,\n            state: item.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StringComponent, \"zpJSObNeifOI0sIKA8gh9AEipjA=\");\n\n_c = StringComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StringComponent\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/string/string.tsx"],"names":["React","useState","SolutionLayout","Input","Button","Circle","delay","ElementStates","styles","StringComponent","inputValue","setInputValue","inputArr","setInputArr","loader","setLoader","onInputChange","e","currentTarget","value","swap","arr","firstIndex","secondIndex","temp","reverse","mid","Math","ceil","length","i","j","color","Changing","Modified","handleReverse","newArr","split","map","Default","container","inputcontainer","button","circlecontainer","item","index"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { delay } from \"../../utils/functions\";\nimport { TArray } from \"../../types/string\";\nimport { ElementStates } from \"../../types/element-states\";\nimport styles from \"./string.module.css\";\n\nexport const StringComponent: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputArr, setInputArr] = useState<Array<TArray>>([]);\n  const [loader, setLoader] = useState(false);\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  const swap = (arr: TArray[], firstIndex: number, secondIndex: number) => {\n    const temp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = temp;\n    return arr;\n  };\n\n  const reverse = async (arr: TArray[]) => {\n    setLoader(true);\n    const mid = Math.ceil(arr.length / 2);\n\n    for (let i = 0; i < mid; i++) {\n      let j = arr.length - 1 - i;\n\n      if (i !== j) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setInputArr([...arr]);\n        await delay(1000);\n      }\n\n      swap(arr, i, j);\n\n      arr[i].color = ElementStates.Modified;\n      arr[j].color = ElementStates.Modified;\n\n      setInputArr([...arr]);\n    }\n    setLoader(false);\n  };\n\n  const handleReverse = () => {\n    const newArr = inputValue\n      .split(\"\")\n      .map((value) => ({ value, color: ElementStates.Default }));\n    reverse(newArr);\n  };\n\n  return (\n    <SolutionLayout title=\"Строка\">\n      <div className={styles.container}>\n        <div className={styles.inputcontainer}>\n          <Input\n            value={inputValue}\n            isLimitText={true}\n            maxLength={11}\n            onChange={onInputChange}\n          />\n          <div className={styles.button}>\n            <Button\n              text=\"Развернуть\"\n              isLoader={loader}\n              disabled={inputValue === \"\" ? true : false}\n              onClick={handleReverse}\n            />\n          </div>\n        </div>\n        <ul className={styles.circlecontainer}>\n          {inputArr &&\n            inputArr.map((item, index) => (\n              <li key={index}>\n                <Circle letter={item.value} state={item.color} />\n              </li>\n            ))}\n        </ul>\n      </div>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}