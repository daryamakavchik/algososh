{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from \"./stack-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Stack {\n  constructor() {\n    this.container = [];\n\n    this.push = item => {\n      this.container.push(item);\n    };\n\n    this.pop = () => {\n      this.container.pop();\n    };\n\n    this.peek = () => {\n      if (this.container.length !== 0) {\n        return this.container[this.container.length - 1];\n      }\n\n      return null;\n    };\n\n    this.clear = () => {\n      this.container = [];\n    };\n\n    this.getSize = () => this.container.length;\n\n    this.getElements = () => this.container;\n  }\n\n}\nexport const StackPage = () => {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [stack] = useState(new Stack());\n\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddButton = async () => {\n    if (inputValue) {\n      stack.push({\n        value: inputValue,\n        color: ElementStates.Changing\n      });\n      setInputValue('');\n      setArr([...stack.getElements()]);\n      await delay(500);\n      setArr([...stack.getElements()]);\n    }\n\n    ;\n  };\n\n  const handleDeleteButton = async () => {\n    setArr([...stack.getElements()]);\n    await delay(500);\n    stack.pop();\n    setArr([...stack.getElements()]);\n  };\n\n  const handleClearButton = () => {\n    stack.clear();\n    setArr([...stack.getElements()]);\n  };\n\n  const addIndex = (index, arr) => {\n    if (index === arr.length - 1) {\n      return 'top';\n    } else {\n      return '';\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0435\\u043A\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        maxLength: 4,\n        isLimitText: true,\n        type: \"text\",\n        value: inputValue,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        onClick: handleAddButton,\n        disabled: inputValue === ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n        onClick: handleDeleteButton,\n        disabled: !arr.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        onClick: handleClearButton,\n        disabled: !arr.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.circles,\n      children: arr && arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Circle, {\n          letter: item.value,\n          state: item.color,\n          index: index,\n          head: addIndex(index, arr)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackPage, \"V+Q3V/Jd3/DbmWlwyAlj1CtH6Es=\");\n\n_c = StackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx"],"names":["React","useState","Input","Button","Circle","styles","ElementStates","SolutionLayout","Stack","container","push","item","pop","peek","length","clear","getSize","getElements","StackPage","arr","setArr","inputValue","setInputValue","stack","delay","ms","Promise","resolve","setTimeout","onChange","e","target","value","handleAddButton","color","Changing","handleDeleteButton","handleClearButton","addIndex","index","circles","map"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport { TStackItem, IStack } from \"../../types/stack\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from \"./stack-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\n\nexport class Stack<T> implements IStack<T> {\n  private container: T[] = [];\n\n  push = (item: T): void => {\n    this.container.push(item)\n  };\n\n  pop = (): void => {\n    this.container.pop()\n  };\n\n  peek = (): T | null => {\n    if (this.container.length !== 0) { \n      return this.container[this.container.length - 1] \n    }\n    return null\n  };\n\n  clear = (): void => {\n    this.container = [];\n  };\n\n  getSize = () => this.container.length;\n  getElements = () => this.container;\n}\n\nexport const StackPage: React.FC = () => {\n  const [arr, setArr] = useState<TStackItem[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [ stack ] = useState(new Stack<TStackItem>());\n\n  const delay = (ms: number) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddButton = async () => {\n    if (inputValue) {\n      stack.push({ value: inputValue, color: ElementStates.Changing });\n      setInputValue(''); \n      setArr([...stack.getElements()]);\n      await delay(500);\n      setArr([...stack.getElements()]);      \n    };\n  };\n\n  const handleDeleteButton = async () => {\n    setArr([...stack.getElements()]);\n    await delay(500);\n    stack.pop();\n    setArr([...stack.getElements()]);\n  };\n\n  const handleClearButton = () => {\n    stack.clear()\n    setArr([...stack.getElements()]);\n  };\n\n  const addIndex = (index: number, arr: TStackItem[]): string => {\n    if (index === arr.length - 1) {\n      return 'top';\n    } else {\n      return '';\n    };\n  };\n\n  return (\n    <SolutionLayout title=\"Стек\">\n    <div className={styles.container}>\n      <Input maxLength={4} isLimitText={true} type=\"text\" value={inputValue} onChange={onChange} />\n      <Button text=\"Добавить\" onClick={handleAddButton} disabled={inputValue === ''} />\n      <Button text=\"Удалить\" onClick={handleDeleteButton} disabled={!arr.length} />\n      <Button text=\"Очистить\" onClick={handleClearButton} disabled={!arr.length} />\n    </div>\n    <ul className={styles.circles} >\n          {arr && arr.map((item, index) =>\n            <li key={index}>\n              <Circle letter={item.value} state={item.color} index={index} head={addIndex(index, arr)} />\n            </li>)}\n        </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}