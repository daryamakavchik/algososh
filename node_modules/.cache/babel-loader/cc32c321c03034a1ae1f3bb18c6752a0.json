{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { Button } from \"../ui/button/button\";\nimport { Column } from \"../ui/column/column\";\nimport styles from \"./sorting-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Direction } from \"../../types/direction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SortingPage = () => {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const [sortType, setSortType] = useState(\"выбор\");\n  const [direction, setDirection] = useState();\n  const [loader, setLoader] = useState(false);\n\n  const sortAscendingSelect = async arr => {\n    setLoader(true);\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let minInd = i;\n\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        if (arr[j].value < arr[minInd].value) {\n          minInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[minInd].value] = [arr[minInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortDescendingSelect = async arr => {\n    setLoader(true);\n\n    for (let i = 0; i < arr.length - 1; i++) {\n      let maxInd = i;\n\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        if (arr[j].value > arr[maxInd].value) {\n          maxInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[maxInd].value] = [arr[maxInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortAscendingBubble = async arr => {\n    setLoader(true);\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        if (arr[j].value > arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n\n        arr[j].color = ElementStates.Default;\n      }\n\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n\n    setLoader(false);\n  };\n\n  const sortDescendingBubble = async arr => {\n    setLoader(true);\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n\n        if (arr[j].value < arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n\n        arr[j].color = ElementStates.Default;\n      }\n\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n\n    setLoader(false);\n  };\n\n  const handleClick = direction => {\n    setDirection(direction);\n\n    if (sortType === \"выбор\" && direction === Direction.Ascending) {\n      sortAscendingSelect(arr);\n    }\n\n    if (sortType === \"выбор\" && direction === Direction.Descending) {\n      sortDescendingSelect(arr);\n    }\n\n    if (sortType === \"пузырек\" && direction === Direction.Ascending) {\n      sortAscendingBubble(arr);\n    }\n\n    if (sortType === \"пузырек\" && direction === Direction.Descending) {\n      sortDescendingBubble(arr);\n    }\n  };\n\n  const changeSortType = event => {\n    setSortType(event.target.value);\n  };\n\n  const createArr = () => {\n    const arr = [];\n    const length = Math.floor(Math.random() * (17 - 3 + 1)) + 3;\n\n    for (let i = 0; i < length; i++) {\n      arr.push({\n        value: Math.round(Math.random() * 100),\n        color: ElementStates.Default\n      });\n    }\n\n    return arr;\n  };\n\n  const addNewArr = () => {\n    setArr([...createArr()]);\n  };\n\n  const setLoading = direction => {\n    if (direction === direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setDisabled = direction => {\n    if (direction !== direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  }; // useEffect(() => {\n  //   setArr([...createArr()]);\n  //   return () => {\n  //     setArr([]);\n  //   };\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0430\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.radios,\n        children: [/*#__PURE__*/_jsxDEV(RadioInput, {\n          label: \"\\u0412\\u044B\\u0431\\u043E\\u0440\",\n          value: \"\\u0432\\u044B\\u0431\\u043E\\u0440\",\n          checked: sortType === 'Выбор' ? true : false,\n          onChange: changeSortType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioInput, {\n          label: \"\\u041F\\u0443\\u0437\\u044B\\u0440\\u0451\\u043A\",\n          value: \"\\u043F\\u0443\\u0437\\u044B\\u0440\\u0451\\u043A\",\n          checked: sortType === 'Пузырёк' ? true : false,\n          onChange: changeSortType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '205px'\n          },\n          text: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E\",\n          sorting: Direction.Ascending,\n          onClick: () => handleClick(Direction.Ascending)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '205px'\n          },\n          text: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E\",\n          sorting: Direction.Descending,\n          onClick: () => handleClick(Direction.Descending)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.arrbutton,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '205px'\n          },\n          text: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\",\n          onClick: addNewArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.columns,\n      children: arr && arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.column,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          index: +item.value,\n          state: item.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SortingPage, \"LF8+sOaFZlBZBDp9jMt+TNcG00M=\");\n\n_c = SortingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/sorting-page/sorting-page.tsx"],"names":["React","useState","RadioInput","Button","Column","styles","ElementStates","SolutionLayout","Direction","SortingPage","arr","setArr","sortType","setSortType","direction","setDirection","loader","setLoader","sortAscendingSelect","i","length","minInd","j","color","Changing","value","Default","Modified","sortDescendingSelect","maxInd","sortAscendingBubble","sortDescendingBubble","handleClick","Ascending","Descending","changeSortType","event","target","createArr","Math","floor","random","push","round","addNewArr","setLoading","setDisabled","container","radios","buttons","width","arrbutton","columns","map","item","index","column"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RadioInput } from \"../ui/radio-input/radio-input\";\nimport { Button } from \"../ui/button/button\";\nimport { Column } from \"../ui/column/column\";\nimport styles from \"./sorting-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { TArray } from \"../../types/sort\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { Direction } from \"../../types/direction\";\n\nexport const SortingPage: React.FC = () => {\n  const [arr, setArr] = useState<TArray[]>([]);\n  const [sortType, setSortType] = useState(\"выбор\");\n  const [direction, setDirection] = useState<Direction>();\n  const [loader, setLoader] = useState(false);\n\n  const sortAscendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length - 1; i++) {\n      let minInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value < arr[minInd].value) {\n          minInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[minInd].value] = [arr[minInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortDescendingSelect = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length - 1; i++) {\n      let maxInd = i;\n      for (let j = i + 1; j < arr.length; j++) {\n        arr[i].color = ElementStates.Changing;\n        arr[j].color = ElementStates.Changing;\n\n        setArr([...arr]);\n\n        if (arr[j].value > arr[maxInd].value) {\n          maxInd = j;\n        }\n\n        arr[j].color = ElementStates.Default;\n\n        setArr([...arr]);\n      }\n\n      [arr[i].value, arr[maxInd].value] = [arr[maxInd].value, arr[i].value];\n      arr[i].color = ElementStates.Modified;\n    }\n    arr[arr.length - 1].color = ElementStates.Modified;\n    setLoader(false);\n  };\n\n  const sortAscendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n        if (arr[j].value > arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n        arr[j].color = ElementStates.Default;\n      }\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const sortDescendingBubble = async (arr: TArray[]) => {\n    setLoader(true);\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length - i - 1; j++) {\n        arr[j].color = ElementStates.Changing;\n        arr[j + 1].color = ElementStates.Changing;\n        setArr([...arr]);\n        if (arr[j].value < arr[j + 1].value) {\n          [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n        }\n        arr[j].color = ElementStates.Default;\n      }\n      arr[arr.length - i - 1].color = ElementStates.Modified;\n    }\n    setLoader(false);\n  };\n\n  const handleClick = (direction: Direction) => {\n    setDirection(direction);\n\n    if (sortType === \"выбор\" && direction === Direction.Ascending) {\n      sortAscendingSelect(arr);\n    }\n    if (sortType === \"выбор\" && direction === Direction.Descending) {\n      sortDescendingSelect(arr);\n    }\n    if (sortType === \"пузырек\" && direction === Direction.Ascending) {\n      sortAscendingBubble(arr);\n    }\n    if (sortType === \"пузырек\" && direction === Direction.Descending) {\n      sortDescendingBubble(arr);\n    }\n  };\n\n  const changeSortType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSortType(event.target.value);\n  };\n\n  const createArr = () => {\n    const arr = [];\n    const length = Math.floor(Math.random() * (17 - 3 + 1)) + 3;\n    for (let i = 0; i < length; i++) {\n      arr.push({\n        value: Math.round(Math.random() * 100),\n        color: ElementStates.Default,\n      });\n    }\n    return arr;\n  };\n\n  const addNewArr = () => {\n    setArr([...createArr()]);\n  };\n\n  const setLoading = (direction: Direction) => {\n    if (direction === direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const setDisabled = (direction: Direction) => {\n    if (direction !== direction && loader === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  // useEffect(() => {\n  //   setArr([...createArr()]);\n  //   return () => {\n  //     setArr([]);\n  //   };\n  // }, []);\n\n  return (\n    <SolutionLayout title=\"Сортировка массива\">\n      <div className={styles.container}>\n        <div className={styles.radios}>\n          <RadioInput label=\"Выбор\" value=\"выбор\" checked={sortType === 'Выбор' ? true : false} onChange={changeSortType} />\n          <RadioInput label=\"Пузырёк\" value=\"пузырёк\" checked={sortType === 'Пузырёк' ? true : false} onChange={changeSortType} />\n        </div>\n        <div className={styles.buttons}>\n          <Button style={{ width: '205px'}} text=\"По возрастанию\" sorting={Direction.Ascending} onClick={() => handleClick(Direction.Ascending)} />\n          <Button style={{ width: '205px'}} text=\"По убыванию\" sorting={Direction.Descending} onClick={() => handleClick(Direction.Descending)}/>\n        </div>\n        <div className={styles.arrbutton}>\n          <Button style={{ width: '205px'}} text=\"Новый массив\" onClick={addNewArr} />\n        </div>\n      </div>\n      <ul className={styles.columns}>\n        {arr && arr.map((item, index) => (\n          <li key={index} className={styles.column}>\n            <Column index={+item.value} state={item.color} />\n          </li>\n        ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}