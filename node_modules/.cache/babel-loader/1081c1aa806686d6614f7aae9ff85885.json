{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport styles from \"./list-page.module.css\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Node {\n  constructor(value, next) {\n    this.value = void 0;\n    this.next = void 0;\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n\n}\nexport class LinkedList {\n  constructor() {\n    this.head = void 0;\n    this.size = void 0;\n    this.head = null;\n    this.size = 0;\n  }\n\n  append(element) {\n    let node = new Node(element);\n\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n\n      if (current) current.next = new Node(element);\n    }\n\n    this.size++;\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  insertAt(element, index) {\n    if (index < 0 || index > this.size) {\n      console.log(\"Enter a valid index\");\n      return;\n    } else {\n      const node = new Node(element);\n\n      if (index === 0) {\n        node.next = this.head;\n        this.head = node;\n        this.size++;\n      } else {\n        let curr = this.head;\n        let currIndex = 0;\n\n        for (let i = 0; i < index - 1; i++) {\n          curr = curr.next;\n        }\n\n        node.next = curr.next;\n        curr.next = node;\n        this.size++;\n      }\n    }\n  } // print() {\n  //   let curr = this.head;\n  //   let res = '';\n  //   while (curr) {\n  //     res += `${curr.value} `;\n  //     curr = curr.next;\n  //   }\n  //   console.log(res);\n  // }\n\n\n}\nexport const ListPage = () => {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n\n  const getRandomNum = (minLen, maxLen) => {\n    return Math.floor(Math.random() * (maxLen - minLen + 1)) + minLen;\n  };\n\n  const randomnum = getRandomNum(0, 99);\n  const list = useMemo(() => {\n    return new LinkedList(Array.from({\n      length: 4\n    }, randomnum).toString());\n  }, []);\n\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = e => {\n    setIndexValue(e.target.value);\n  };\n\n  const handleAddToHead = async () => {\n    if (inputValue) {\n      setInputValue(\"\");\n      list.append(inputValue);\n    }\n  };\n\n  const handleAddToTail = () => {};\n\n  const handleRemoveFromHead = () => {};\n\n  const handleRemoveFromTail = () => {};\n\n  const handleAddByIndex = () => {};\n\n  const handleRemoveByIndex = () => {};\n\n  const removeElements = (head, val) => {\n    if (head === null) {\n      return null;\n    }\n\n    let dummyHead = new Node(0);\n    dummyHead.next = head;\n    head = dummyHead;\n\n    while (dummyHead.next !== null) {\n      if (dummyHead.next.value === val) {\n        dummyHead.next = dummyHead.next.next;\n      } else {\n        dummyHead = dummyHead.next;\n      }\n    }\n\n    return head.next;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\",\n        maxLength: 4,\n        isLimitText: true,\n        type: \"text\",\n        value: inputValue,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",\n        type: \"text\",\n        value: indexValue,\n        onChange: onIndexChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.circles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"z02/6QxzkGX9qLFhji056BHjdC0=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useMemo","Input","Button","styles","SolutionLayout","Node","constructor","value","next","undefined","LinkedList","head","size","append","element","node","current","getSize","insertAt","index","console","log","curr","currIndex","i","ListPage","arr","setArr","inputValue","setInputValue","indexValue","setIndexValue","getRandomNum","minLen","maxLen","Math","floor","random","randomnum","list","Array","from","length","toString","delay","ms","Promise","resolve","setTimeout","onInputChange","e","target","onIndexChange","handleAddToHead","handleAddToTail","handleRemoveFromHead","handleRemoveFromTail","handleAddByIndex","handleRemoveByIndex","removeElements","val","dummyHead","container","maxWidth","minWidth","circles"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useMemo } from \"react\";\nimport { TListItem, ILinkedList } from \"../../types/list\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from \"./list-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { listenerCount } from \"process\";\n\nexport class Node<T> {\n  value: T;\n  next: Node<T> | null;\n  constructor(value: T, next?: Node<T> | null) {\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n  private head: Node<T> | null;\n  private size: number;\n  constructor() {\n    this.head = null;\n    this.size = 0;\n  }\n\n  append(element: T) {\n    let node = new Node(element);\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n      if (current) current.next = new Node(element);\n    }\n    this.size++;\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  insertAt(element: T, index: number) {\n    if (index < 0 || index > this.size) {\n      console.log(\"Enter a valid index\");\n      return;\n    } else {\n      const node = new Node(element);\n\n      if (index === 0) {\n        node.next = this.head;\n        this.head = node;\n        this.size++;\n      } else {\n        let curr = this.head;\n        let currIndex = 0;\n        for (let i = 0; i < index - 1; i++) {\n          curr = curr!.next;\n        }\n        node.next = curr!.next;\n        curr!.next = node;\n        this.size++;\n      }\n    }\n  }\n\n  // print() {\n  //   let curr = this.head;\n  //   let res = '';\n  //   while (curr) {\n  //     res += `${curr.value} `;\n  //     curr = curr.next;\n  //   }\n  //   console.log(res);\n  // }\n}\n\nexport const ListPage: React.FC = () => {\n  const [arr, setArr] = useState<any>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n\n  const getRandomNum = (minLen: number, maxLen: number):number => {\n    return Math.floor(Math.random() * (maxLen - minLen + 1)) + minLen;\n};\n  const randomnum = getRandomNum(0, 99);\n\n  const list = useMemo(() => { return new LinkedList<string>((Array.from({ length: 4 }, randomnum).toString()))}, []);\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndexValue(e.target.value);\n  };\n\n  const handleAddToHead = async () => {\n    if(inputValue){\n      setInputValue(\"\");\n      list.append(inputValue);\n    }\n  }\n\n  const handleAddToTail = () => {\n    \n  }\n\n  const handleRemoveFromHead = () => {\n\n  }\n\n  const handleRemoveFromTail = () => {\n    \n  }\n\n  const handleAddByIndex = () => {\n\n  }\n\n  const handleRemoveByIndex = () => {\n    \n  }\n\n  const removeElements = ( head: Node<number> | null, val: number): Node<number> | null => {\n    if (head === null) {\n      return null;\n    }\n\n    let dummyHead = new Node(0);\n    dummyHead.next = head;\n    head = dummyHead;\n\n    while (dummyHead.next !== null) {\n      if (dummyHead.next.value === val) {\n        dummyHead.next = dummyHead.next.next;\n      } else {\n        dummyHead = dummyHead.next;\n      }\n    }\n\n    return head.next;\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите значение\"\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <Button style={{ minWidth: \"175px\" }} text=\"Добавить в head\" />\n        <Button style={{ minWidth: \"175px\" }} text=\"Добавить в tail\" />\n        <Button style={{ minWidth: \"175px\" }} text=\"Удалить из head\" />\n        <Button style={{ minWidth: \"175px\" }} text=\"Удалить из tail\" />\n      </div>\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите индекс\"\n          type=\"text\"\n          value={indexValue}\n          onChange={onIndexChange}\n        />\n        <Button style={{ minWidth: \"362px\" }} text=\"Добавить по индексу\" />\n        <Button style={{ minWidth: \"362px\" }} text=\"Удалить по индексу\" />\n      </div>\n      <ul className={styles.circles}>\n        {/* {arr &&\n          arr.map((item, index) => (\n            <li key={index}>\n              <Circle\n                letter={item.value}\n                state={item.color}\n                index={index}\n                head={addIndex(index, arr)}\n              />\n            </li>\n          ))} */}\n      </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}