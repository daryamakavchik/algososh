{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport styles from \"./list-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Node {\n  constructor(value, next) {\n    this.value = void 0;\n    this.next = void 0;\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n\n}\nexport class LinkedList {\n  addValues(values) {\n    values.forEach(value => this.append(value));\n  }\n\n  constructor(elements) {\n    this.head = void 0;\n    this.tail = void 0;\n    this.size = void 0;\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n\n    if (elements !== null && elements !== void 0 && elements.length) {\n      this.addValues(elements);\n    }\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  getCurr(index) {\n    if (index < 0 || index >= this.size) return null;\n    let counter = 0;\n    let curr = this.head;\n\n    while (counter !== index && curr) {\n      var _curr;\n\n      curr = (_curr = curr) === null || _curr === void 0 ? void 0 : _curr.next;\n      counter++;\n    }\n\n    return curr;\n  }\n\n  toArray() {\n    let curr = this.head;\n    const res = [];\n\n    while (curr) {\n      res.push(curr.value);\n      curr = curr.next;\n    }\n\n    return [...res];\n  }\n\n  removeHead() {\n    if (!this.head) return null;\n\n    if (this.size === 1) {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      return;\n    }\n\n    const currentHead = this.head;\n    const newHead = currentHead.next;\n    this.head = newHead;\n    this.size--;\n  }\n\n  removeTail() {\n    if (this.head == null) return null;\n\n    if (this.head.next == null) {\n      return null;\n    }\n\n    var second_last = this.head;\n\n    while (second_last !== null && second_last.next !== null && second_last.next.next != null) second_last = second_last.next;\n\n    second_last.next = null;\n    return this.head;\n  }\n\n  append(element) {\n    let node = new Node(element);\n\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n\n      if (current) current.next = new Node(element);\n    }\n\n    this.size++;\n  }\n\n  prepend(element) {\n    const newNode = new Node(element);\n    const currentNode = this.head;\n    this.head = newNode;\n    this.head.next = currentNode;\n    this.size++;\n  }\n\n  addByIndex(element, index) {\n    const newNode = new Node(element);\n\n    if (index === 0) {\n      newNode.next = this.head;\n      this.head = newNode;\n      this.size++;\n    }\n\n    let prev = this.getCurr(index - 1);\n\n    if (prev !== null && prev !== void 0 && prev.next) {\n      let temp = prev === null || prev === void 0 ? void 0 : prev.next;\n      prev.next = newNode;\n      newNode.next = temp;\n      this.size++;\n    }\n\n    return;\n  }\n\n  removeByIndex(index) {\n    if (index === 0) return this.removeHead();\n    if (index === this.size - 1) return this.removeTail();\n    let prev = this.getCurr(index - 1);\n\n    if (prev !== null && prev !== void 0 && prev.next) {\n      let deletedNode = prev === null || prev === void 0 ? void 0 : prev.next;\n      prev.next = deletedNode === null || deletedNode === void 0 ? void 0 : deletedNode.next;\n      this.size--;\n      return deletedNode;\n    }\n  }\n\n}\nexport const ListPage = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n  const [circleValue, setCircleValue] = useState(\"\");\n\n  const getRandomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const list = useMemo(() => new LinkedList(Array.from({\n    length: 4\n  }, () => getRandomNumber(0, 99).toString())), []);\n  const [arr, setArr] = useState(list.toArray().map(item => ({\n    value: item,\n    color: ElementStates.Default\n  })));\n  const [addedToHead, setAddedToHead] = useState(false);\n  const [removedFromHead, setRemovedFromHead] = useState(false);\n  const [addedByIndex, setAddedByIndex] = useState(false);\n  const [removedByIndex, setRemovedByIndex] = useState(false);\n  const [addedToTail, setAddedToTail] = useState(false);\n  const [removedFromTail, setRemovedFromTail] = useState(false);\n  const [indexOfInputValue, setIndexOfInputValue] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = e => {\n    setIndexValue(e.target.value);\n  };\n\n  const displayHead = index => {\n    if (index === 0 && !addedToHead && !addedByIndex && !removedFromHead) {\n      return \"head\";\n    } else if (index === 0 && addedByIndex && +indexValue !== 0) {\n      return \"head\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const displayTail = index => {\n    if (index === arr.length - 1 && !removedFromTail && !removedByIndex && !addedToTail) {\n      return \"tail\";\n    } else if (arr.length === 1) {\n      return \"\";\n    } else if (removedByIndex && index === arr.length - 1) {\n      return \"\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleAddToHead = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setAddedToHead(true);\n      await delay(500);\n      list.prepend(inputValue);\n      setAddedToHead(false);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      newArr[0].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[0].color = ElementStates.Default;\n      setArr(newArr);\n    }\n\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleAddToTail = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setIndexOfInputValue(list.getSize() - 1);\n      setAddedToTail(true);\n      await delay(500);\n      list.append(inputValue);\n      setAddedToTail(false);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      newArr[newArr.length - 1].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[newArr.length - 1].color = ElementStates.Default;\n      setArr(newArr);\n    }\n\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleRemoveFromHead = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      setCircleValue(newArr[0].value);\n      setLoading(true);\n      setRemovedFromHead(true);\n      setIndexOfInputValue(0);\n      newArr[0].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.removeHead();\n      setRemovedFromHead(false);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n    }\n\n    setLoading(false);\n  };\n\n  const handleRemoveFromTail = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      setCircleValue(newArr[newArr.length - 1].value);\n      setLoading(true);\n      setRemovedFromTail(true);\n      setIndexOfInputValue(list.getSize() - 1);\n      newArr[newArr.length - 1].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.removeTail();\n      setRemovedFromTail(false);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n    }\n\n    setLoading(false);\n  };\n\n  const handleAddByIndex = async () => {\n    if (+indexValue < 5 && list.getSize() < 6) {\n      setLoading(true);\n      setAddedByIndex(true);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n\n      for (let i = 0; i <= +indexValue; i++) {\n        setIndexOfInputValue(i);\n        await delay(500);\n\n        if (i < +indexValue) {\n          newArr[i].color = ElementStates.Changing;\n          setArr(newArr);\n        }\n      }\n\n      setAddedByIndex(false);\n      setIndexOfInputValue(+\"\");\n      list.addByIndex(inputValue, +indexValue);\n      const finalArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      finalArr[+indexValue].color = ElementStates.Modified;\n      setArr(finalArr);\n      await delay(500);\n      finalArr[+indexValue].color = ElementStates.Default;\n      setArr(finalArr);\n    }\n\n    setLoading(false);\n    setInputValue(\"\");\n    setIndexValue(\"\");\n  };\n\n  const handleRemoveByIndex = async () => {\n    if (+indexValue < list.getSize() && +indexValue < 7) {\n      setLoading(true);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n\n      for (let i = 0; i <= +indexValue; i++) {\n        await delay(500);\n        newArr[i].color = ElementStates.Changing;\n        setArr([...newArr]);\n      }\n\n      await delay(500);\n      setCircleValue(newArr[+indexValue].value);\n      newArr[+indexValue].value = \"\";\n      setRemovedByIndex(true);\n      newArr[+indexValue].color = ElementStates.Default;\n      setIndexOfInputValue(+indexValue);\n      await delay(500);\n      list.removeByIndex(+indexValue);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n      setRemovedByIndex(false);\n      setLoading(false);\n      setIndexValue(\"\");\n    }\n  };\n\n  const removeElements = (head, val) => {\n    if (head === null) {\n      return null;\n    }\n\n    let dummyHead = new Node(0);\n    dummyHead.next = head;\n    head = dummyHead;\n\n    while (dummyHead.next !== null) {\n      if (dummyHead.next.value === val) {\n        dummyHead.next = dummyHead.next.next;\n      } else {\n        dummyHead = dummyHead.next;\n      }\n    }\n\n    return head.next;\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\",\n        maxLength: 4,\n        isLimitText: true,\n        type: \"text\",\n        value: inputValue,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\",\n        onClick: handleAddToHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\",\n        onClick: handleAddToTail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\",\n        onClick: handleRemoveFromHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\",\n        onClick: handleRemoveFromTail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",\n        type: \"text\",\n        value: indexValue,\n        onChange: onIndexChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n        onClick: handleAddByIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n        onClick: handleRemoveByIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.circles,\n      children: arr && arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.circlebox,\n        children: [loading === true && addedToHead === true && index === indexOfInputValue && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.smalltopcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            isSmall: true,\n            letter: inputValue,\n            state: ElementStates.Changing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 19\n        }, this), loading === true && addedToTail === true && index === indexOfInputValue && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.smallbottomcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            isSmall: true,\n            letter: circleValue,\n            state: ElementStates.Changing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.bigcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item.value,\n            state: item.color,\n            index: index,\n            head: displayHead(index),\n            tail: displayTail(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 15\n        }, this), index !== arr.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.arrow,\n          children: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"rXG2Bol12La/UCAGzQdQ3TDbfZ0=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useMemo","Input","Button","Circle","ArrowIcon","styles","ElementStates","SolutionLayout","Node","constructor","value","next","undefined","LinkedList","addValues","values","forEach","append","elements","head","tail","size","length","getSize","getCurr","index","counter","curr","toArray","res","push","removeHead","currentHead","newHead","removeTail","second_last","element","node","current","prepend","newNode","currentNode","addByIndex","prev","temp","removeByIndex","deletedNode","ListPage","inputValue","setInputValue","indexValue","setIndexValue","circleValue","setCircleValue","getRandomNumber","min","max","Math","floor","random","list","Array","from","toString","arr","setArr","map","item","color","Default","addedToHead","setAddedToHead","removedFromHead","setRemovedFromHead","addedByIndex","setAddedByIndex","removedByIndex","setRemovedByIndex","addedToTail","setAddedToTail","removedFromTail","setRemovedFromTail","indexOfInputValue","setIndexOfInputValue","loading","setLoading","delay","ms","Promise","resolve","setTimeout","onInputChange","e","target","onIndexChange","displayHead","displayTail","handleAddToHead","newArr","Modified","handleAddToTail","handleRemoveFromHead","handleRemoveFromTail","handleAddByIndex","i","Changing","finalArr","handleRemoveByIndex","removeElements","val","dummyHead","container","maxWidth","minWidth","circles","circlebox","smalltopcircle","smallbottomcircle","bigcircle","arrow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAuCC,OAAvC,QAAsD,OAAtD;AAEA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,cAAT,QAA+B,uCAA/B;;AAEA,OAAO,MAAMC,IAAN,CAAc;AAGnBC,EAAAA,WAAW,CAACC,KAAD,EAAWC,IAAX,EAAkC;AAAA,SAF7CD,KAE6C;AAAA,SAD7CC,IAC6C;AAC3C,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAI,KAAKC,SAAT,GAAqB,IAArB,GAA4BD,IAAxC;AACD;;AANkB;AASrB,OAAO,MAAME,UAAN,CAA8C;AAI3CC,EAAAA,SAAS,CAACC,MAAD,EAAc;AAC7BA,IAAAA,MAAM,CAACC,OAAP,CAAgBN,KAAD,IAAW,KAAKO,MAAL,CAAYP,KAAZ,CAA1B;AACD;;AACDD,EAAAA,WAAW,CAACS,QAAD,EAAgB;AAAA,SANnBC,IAMmB;AAAA,SALnBC,IAKmB;AAAA,SAJnBC,IAImB;AACzB,SAAKF,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,CAAZ;;AACA,QAAIH,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEI,MAAd,EAAsB;AACpB,WAAKR,SAAL,CAAeI,QAAf;AACD;AACF;;AAEDK,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKF,IAAZ;AACD;;AAEDG,EAAAA,OAAO,CAACC,KAAD,EAAgB;AACrB,QAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAI,KAAKJ,IAA/B,EAAqC,OAAO,IAAP;AACrC,QAAIK,OAAO,GAAG,CAAd;AACA,QAAIC,IAAI,GAAG,KAAKR,IAAhB;;AACA,WAAOO,OAAO,KAAKD,KAAZ,IAAqBE,IAA5B,EAAkC;AAAA;;AAChCA,MAAAA,IAAI,YAAGA,IAAH,0CAAG,MAAMhB,IAAb;AACAe,MAAAA,OAAO;AACR;;AACD,WAAOC,IAAP;AACD;;AAEDC,EAAAA,OAAO,GAAG;AACR,QAAID,IAAI,GAAG,KAAKR,IAAhB;AACA,UAAMU,GAAG,GAAG,EAAZ;;AAEA,WAAOF,IAAP,EAAa;AACXE,MAAAA,GAAG,CAACC,IAAJ,CAASH,IAAI,CAACjB,KAAd;AACAiB,MAAAA,IAAI,GAAGA,IAAI,CAAChB,IAAZ;AACD;;AACD,WAAO,CAAC,GAAGkB,GAAJ,CAAP;AACD;;AAEDE,EAAAA,UAAU,GAAG;AACX,QAAI,CAAC,KAAKZ,IAAV,EAAgB,OAAO,IAAP;;AAEhB,QAAI,KAAKE,IAAL,KAAc,CAAlB,EAAqB;AACnB,WAAKF,IAAL,GAAY,IAAZ;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKC,IAAL,GAAY,CAAZ;AACA;AACD;;AAED,UAAMW,WAAW,GAAG,KAAKb,IAAzB;AACA,UAAMc,OAAO,GAAGD,WAAW,CAACrB,IAA5B;AACA,SAAKQ,IAAL,GAAYc,OAAZ;AACA,SAAKZ,IAAL;AACD;;AAEDa,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKf,IAAL,IAAa,IAAjB,EAAuB,OAAO,IAAP;;AAEvB,QAAI,KAAKA,IAAL,CAAUR,IAAV,IAAkB,IAAtB,EAA4B;AAC1B,aAAO,IAAP;AACD;;AAED,QAAIwB,WAAW,GAAG,KAAKhB,IAAvB;;AACA,WACEgB,WAAW,KAAK,IAAhB,IACAA,WAAW,CAACxB,IAAZ,KAAqB,IADrB,IAEAwB,WAAW,CAACxB,IAAZ,CAAiBA,IAAjB,IAAyB,IAH3B,EAKEwB,WAAW,GAAGA,WAAW,CAACxB,IAA1B;;AACFwB,IAAAA,WAAW,CAACxB,IAAZ,GAAmB,IAAnB;AAEA,WAAO,KAAKQ,IAAZ;AACD;;AAEDF,EAAAA,MAAM,CAACmB,OAAD,EAAa;AACjB,QAAIC,IAAI,GAAG,IAAI7B,IAAJ,CAAS4B,OAAT,CAAX;;AACA,QAAI,KAAKf,IAAL,KAAc,CAAlB,EAAqB;AACnB,WAAKF,IAAL,GAAYkB,IAAZ;AACD,KAFD,MAEO;AACL,UAAIC,OAAO,GAAG,KAAKnB,IAAnB;;AACA,aAAOmB,OAAO,IAAIA,OAAO,CAAC3B,IAAR,KAAiB,IAAnC,EAAyC;AACvC2B,QAAAA,OAAO,GAAGA,OAAO,CAAC3B,IAAlB;AACD;;AACD,UAAI2B,OAAJ,EAAaA,OAAO,CAAC3B,IAAR,GAAe,IAAIH,IAAJ,CAAS4B,OAAT,CAAf;AACd;;AACD,SAAKf,IAAL;AACD;;AAEDkB,EAAAA,OAAO,CAACH,OAAD,EAAa;AAClB,UAAMI,OAAO,GAAG,IAAIhC,IAAJ,CAAS4B,OAAT,CAAhB;AACA,UAAMK,WAAW,GAAG,KAAKtB,IAAzB;AACA,SAAKA,IAAL,GAAYqB,OAAZ;AACA,SAAKrB,IAAL,CAAUR,IAAV,GAAiB8B,WAAjB;AACA,SAAKpB,IAAL;AACD;;AAEDqB,EAAAA,UAAU,CAACN,OAAD,EAAaX,KAAb,EAA4B;AACpC,UAAMe,OAAO,GAAG,IAAIhC,IAAJ,CAAS4B,OAAT,CAAhB;;AAEA,QAAIX,KAAK,KAAK,CAAd,EAAiB;AACfe,MAAAA,OAAO,CAAC7B,IAAR,GAAe,KAAKQ,IAApB;AACA,WAAKA,IAAL,GAAYqB,OAAZ;AACA,WAAKnB,IAAL;AACD;;AAED,QAAIsB,IAAI,GAAG,KAAKnB,OAAL,CAAaC,KAAK,GAAG,CAArB,CAAX;;AACA,QAAIkB,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEhC,IAAV,EAAgB;AACd,UAAIiC,IAAI,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEhC,IAAjB;AACAgC,MAAAA,IAAI,CAAEhC,IAAN,GAAa6B,OAAb;AACAA,MAAAA,OAAO,CAAE7B,IAAT,GAAgBiC,IAAhB;AACA,WAAKvB,IAAL;AACD;;AACD;AACD;;AAEDwB,EAAAA,aAAa,CAACpB,KAAD,EAAgB;AAC3B,QAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,KAAKM,UAAL,EAAP;AACjB,QAAIN,KAAK,KAAK,KAAKJ,IAAL,GAAY,CAA1B,EAA6B,OAAO,KAAKa,UAAL,EAAP;AAC7B,QAAIS,IAAI,GAAG,KAAKnB,OAAL,CAAaC,KAAK,GAAG,CAArB,CAAX;;AACA,QAAIkB,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEhC,IAAV,EAAgB;AACd,UAAImC,WAAW,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEhC,IAAxB;AACAgC,MAAAA,IAAI,CAAChC,IAAL,GAAYmC,WAAZ,aAAYA,WAAZ,uBAAYA,WAAW,CAAEnC,IAAzB;AACA,WAAKU,IAAL;AACA,aAAOyB,WAAP;AACD;AACF;;AAhIkD;AAmIrD,OAAO,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmD,UAAD,EAAaC,aAAb,IAA8BpD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqD,WAAD,EAAcC,cAAd,IAAgCtD,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMuD,eAAe,GAAG,CAACC,GAAD,EAAcC,GAAd,KAAsC;AAC5D,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,GAFD;;AAIA,QAAMK,IAAI,GAAG5D,OAAO,CAClB,MACE,IAAIa,UAAJ,CACEgD,KAAK,CAACC,IAAN,CAAW;AAAExC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA0B,MAAMgC,eAAe,CAAC,CAAD,EAAI,EAAJ,CAAf,CAAuBS,QAAvB,EAAhC,CADF,CAFgB,EAKlB,EALkB,CAApB;AAQA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlE,QAAQ,CAC5B6D,IAAI,CACDhC,OADH,GAEGsC,GAFH,CAEQC,IAAD,KAAW;AAAEzD,IAAAA,KAAK,EAAEyD,IAAT;AAAeC,IAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,GAAX,CAFP,CAD4B,CAA9B;AAKA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxE,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACyE,eAAD,EAAkBC,kBAAlB,IAAwC1E,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC2E,YAAD,EAAeC,eAAf,IAAkC5E,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC6E,cAAD,EAAiBC,iBAAjB,IAAsC9E,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAAC+E,WAAD,EAAcC,cAAd,IAAgChF,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACiF,eAAD,EAAkBC,kBAAlB,IAAwClF,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACmF,iBAAD,EAAoBC,oBAApB,IAA4CpF,QAAQ,EAA1D;AACA,QAAM,CAACqF,OAAD,EAAUC,UAAV,IAAwBtF,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMuF,KAAK,GAAIC,EAAD,IAAgB;AAC5B,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAIC,CAAD,IAAsC;AAC1D3C,IAAAA,aAAa,CAAC2C,CAAC,CAACC,MAAF,CAASnF,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMoF,aAAa,GAAIF,CAAD,IAAsC;AAC1DzC,IAAAA,aAAa,CAACyC,CAAC,CAACC,MAAF,CAASnF,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMqF,WAAW,GAAItE,KAAD,IAAmB;AACrC,QAAIA,KAAK,KAAK,CAAV,IAAe,CAAC6C,WAAhB,IAA+B,CAACI,YAAhC,IAA+C,CAACF,eAApD,EAAqE;AACnE,aAAO,MAAP;AACD,KAFD,MAEO,IAAI/C,KAAK,KAAK,CAAV,IAAeiD,YAAf,IAA+B,CAACxB,UAAD,KAAgB,CAAnD,EAAsD;AAC3D,aAAO,MAAP;AACD,KAFM,MAEA;AACL,aAAO,EAAP;AACD;AACF,GARD;;AAUA,QAAM8C,WAAW,GAAIvE,KAAD,IAAmB;AACrC,QACEA,KAAK,KAAKuC,GAAG,CAAC1C,MAAJ,GAAa,CAAvB,IACA,CAAC0D,eADD,IAEA,CAACJ,cAFD,IAGA,CAACE,WAJH,EAKE;AACA,aAAO,MAAP;AACD,KAPD,MAOO,IAAId,GAAG,CAAC1C,MAAJ,KAAe,CAAnB,EAAsB;AAC3B,aAAO,EAAP;AACD,KAFM,MAEA,IAAIsD,cAAc,IAAInD,KAAK,KAAKuC,GAAG,CAAC1C,MAAJ,GAAa,CAA7C,EAAgD;AACrD,aAAO,EAAP;AACD,KAFM,MAEA;AACL,aAAO,EAAP;AACD;AACF,GAfD;;AAiBA,QAAM2E,eAAe,GAAG,YAAY;AAClC,QAAIjD,UAAJ,EAAgB;AACdqC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACApC,MAAAA,aAAa,CAACD,UAAD,CAAb;AACAuB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMe,KAAK,CAAC,GAAD,CAAX;AACA1B,MAAAA,IAAI,CAACrB,OAAL,CAAaS,UAAb;AACAuB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAM2B,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;AAGA6B,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAU9B,KAAV,GAAkB9D,aAAa,CAAC6F,QAAhC;AACAlC,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACA,YAAMZ,KAAK,CAAC,GAAD,CAAX;AACAY,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAU9B,KAAV,GAAkB9D,aAAa,CAAC+D,OAAhC;AACAJ,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACD;;AACDjD,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAoC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAnBD;;AAqBA,QAAMe,eAAe,GAAG,YAAY;AAClC,QAAIpD,UAAJ,EAAgB;AACdqC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACApC,MAAAA,aAAa,CAACD,UAAD,CAAb;AACAmC,MAAAA,oBAAoB,CAACvB,IAAI,CAACrC,OAAL,KAAiB,CAAlB,CAApB;AACAwD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAMO,KAAK,CAAC,GAAD,CAAX;AACA1B,MAAAA,IAAI,CAAC3C,MAAL,CAAY+B,UAAZ;AACA+B,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAMmB,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;AAGA6B,MAAAA,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,CAA0B8C,KAA1B,GAAkC9D,aAAa,CAAC6F,QAAhD;AACAlC,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACA,YAAMZ,KAAK,CAAC,GAAD,CAAX;AACAY,MAAAA,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,CAA0B8C,KAA1B,GAAkC9D,aAAa,CAAC+D,OAAhD;AACAJ,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACD;;AACDjD,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAoC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GApBD;;AAsBA,QAAMgB,oBAAoB,GAAG,YAAY;AACvC,QAAIzC,IAAI,CAACrC,OAAL,KAAiB,CAArB,EAAwB;AACtB,YAAM2E,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;AAGAhB,MAAAA,cAAc,CAAC6C,MAAM,CAAC,CAAD,CAAN,CAAUxF,KAAX,CAAd;AACA2E,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAZ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAU,MAAAA,oBAAoB,CAAC,CAAD,CAApB;AACAe,MAAAA,MAAM,CAAC,CAAD,CAAN,CAAUxF,KAAV,GAAkB,EAAlB;AACAuD,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACA,YAAMZ,KAAK,CAAC,GAAD,CAAX;AACA1B,MAAAA,IAAI,CAAC7B,UAAL;AACA0C,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAR,MAAAA,MAAM,CACJL,IAAI,CACDhC,OADH,GAEGsC,GAFH,CAEQC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFP,CADI,CAAN;AAKD;;AACDgB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GArBD;;AAuBA,QAAMiB,oBAAoB,GAAG,YAAY;AACvC,QAAI1C,IAAI,CAACrC,OAAL,KAAiB,CAArB,EAAwB;AACtB,YAAM2E,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;AAGAhB,MAAAA,cAAc,CAAC6C,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,CAA0BZ,KAA3B,CAAd;AACA2E,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAE,MAAAA,oBAAoB,CAACvB,IAAI,CAACrC,OAAL,KAAiB,CAAlB,CAApB;AACA2E,MAAAA,MAAM,CAACA,MAAM,CAAC5E,MAAP,GAAgB,CAAjB,CAAN,CAA0BZ,KAA1B,GAAkC,EAAlC;AACAuD,MAAAA,MAAM,CAACiC,MAAD,CAAN;AACA,YAAMZ,KAAK,CAAC,GAAD,CAAX;AACA1B,MAAAA,IAAI,CAAC1B,UAAL;AACA+C,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAhB,MAAAA,MAAM,CACJL,IAAI,CACDhC,OADH,GAEGsC,GAFH,CAEQC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFP,CADI,CAAN;AAKD;;AACDgB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GArBD;;AAuBA,QAAMkB,gBAAgB,GAAG,YAAY;AACnC,QAAI,CAACrD,UAAD,GAAc,CAAd,IAAmBU,IAAI,CAACrC,OAAL,KAAiB,CAAxC,EAA2C;AACzC8D,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAV,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,YAAMuB,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;;AAGA,WAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAACtD,UAAtB,EAAkCsD,CAAC,EAAnC,EAAuC;AACrCrB,QAAAA,oBAAoB,CAACqB,CAAD,CAApB;AACA,cAAMlB,KAAK,CAAC,GAAD,CAAX;;AACA,YAAIkB,CAAC,GAAG,CAACtD,UAAT,EAAqB;AACnBgD,UAAAA,MAAM,CAACM,CAAD,CAAN,CAAUpC,KAAV,GAAkB9D,aAAa,CAACmG,QAAhC;AACAxC,UAAAA,MAAM,CAACiC,MAAD,CAAN;AACD;AACF;;AACDvB,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAQ,MAAAA,oBAAoB,CAAC,CAAC,EAAF,CAApB;AACAvB,MAAAA,IAAI,CAAClB,UAAL,CAAgBM,UAAhB,EAA4B,CAACE,UAA7B;AACA,YAAMwD,QAAQ,GAAG9C,IAAI,CAClBhC,OADc,GAEdsC,GAFc,CAETC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFU,CAAjB;AAGAqC,MAAAA,QAAQ,CAAC,CAACxD,UAAF,CAAR,CAAsBkB,KAAtB,GAA8B9D,aAAa,CAAC6F,QAA5C;AAEAlC,MAAAA,MAAM,CAACyC,QAAD,CAAN;AACA,YAAMpB,KAAK,CAAC,GAAD,CAAX;AACAoB,MAAAA,QAAQ,CAAC,CAACxD,UAAF,CAAR,CAAsBkB,KAAtB,GAA8B9D,aAAa,CAAC+D,OAA5C;AACAJ,MAAAA,MAAM,CAACyC,QAAD,CAAN;AACD;;AACDrB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACApC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GA/BD;;AAiCA,QAAMwD,mBAAmB,GAAG,YAAY;AACtC,QAAI,CAACzD,UAAD,GAAcU,IAAI,CAACrC,OAAL,EAAd,IAAgC,CAAC2B,UAAD,GAAc,CAAlD,EAAqD;AACnDmC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMa,MAAM,GAAGtC,IAAI,CAChBhC,OADY,GAEZsC,GAFY,CAEPC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFQ,CAAf;;AAGA,WAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAACtD,UAAtB,EAAkCsD,CAAC,EAAnC,EAAuC;AACrC,cAAMlB,KAAK,CAAC,GAAD,CAAX;AACAY,QAAAA,MAAM,CAACM,CAAD,CAAN,CAAUpC,KAAV,GAAkB9D,aAAa,CAACmG,QAAhC;AACAxC,QAAAA,MAAM,CAAC,CAAC,GAAGiC,MAAJ,CAAD,CAAN;AACD;;AACD,YAAMZ,KAAK,CAAC,GAAD,CAAX;AACAjC,MAAAA,cAAc,CAAC6C,MAAM,CAAC,CAAChD,UAAF,CAAN,CAAoBxC,KAArB,CAAd;AACAwF,MAAAA,MAAM,CAAC,CAAChD,UAAF,CAAN,CAAoBxC,KAApB,GAA4B,EAA5B;AACAmE,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAqB,MAAAA,MAAM,CAAC,CAAChD,UAAF,CAAN,CAAoBkB,KAApB,GAA4B9D,aAAa,CAAC+D,OAA1C;AACAc,MAAAA,oBAAoB,CAAC,CAACjC,UAAF,CAApB;AACA,YAAMoC,KAAK,CAAC,GAAD,CAAX;AACA1B,MAAAA,IAAI,CAACf,aAAL,CAAmB,CAACK,UAApB;AACAe,MAAAA,MAAM,CACJL,IAAI,CACDhC,OADH,GAEGsC,GAFH,CAEQC,IAAD,KAAW;AAAEzD,QAAAA,KAAK,EAAEyD,IAAT;AAAeC,QAAAA,KAAK,EAAE9D,aAAa,CAAC+D;AAApC,OAAX,CAFP,CADI,CAAN;AAKAQ,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAQ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAlC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,GA5BD;;AA8BA,QAAMyD,cAAc,GAAG,CACrBzF,IADqB,EAErB0F,GAFqB,KAGG;AACxB,QAAI1F,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI2F,SAAS,GAAG,IAAItG,IAAJ,CAAS,CAAT,CAAhB;AACAsG,IAAAA,SAAS,CAACnG,IAAV,GAAiBQ,IAAjB;AACAA,IAAAA,IAAI,GAAG2F,SAAP;;AAEA,WAAOA,SAAS,CAACnG,IAAV,KAAmB,IAA1B,EAAgC;AAC9B,UAAImG,SAAS,CAACnG,IAAV,CAAeD,KAAf,KAAyBmG,GAA7B,EAAkC;AAChCC,QAAAA,SAAS,CAACnG,IAAV,GAAiBmG,SAAS,CAACnG,IAAV,CAAeA,IAAhC;AACD,OAFD,MAEO;AACLmG,QAAAA,SAAS,GAAGA,SAAS,CAACnG,IAAtB;AACD;AACF;;AAED,WAAOQ,IAAI,CAACR,IAAZ;AACD,GArBD;;AAuBA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,iFAAtB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEN,MAAM,CAAC0G,SAAvB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,WAAW,EAAC,6FAFd;AAGE,QAAA,SAAS,EAAE,CAHb;AAIE,QAAA,WAAW,EAAE,IAJf;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAEhE,UANT;AAOE,QAAA,QAAQ,EAAE2C;AAPZ;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEsB,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,8DAFP;AAGE,QAAA,OAAO,EAAEhB;AAHX;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEgB,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,8DAFP;AAGE,QAAA,OAAO,EAAEb;AAHX;AAAA;AAAA;AAAA;AAAA,cAfF,eAoBE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEa,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,8DAFP;AAGE,QAAA,OAAO,EAAEZ;AAHX;AAAA;AAAA;AAAA;AAAA,cApBF,eAyBE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,8DAFP;AAGE,QAAA,OAAO,EAAEX;AAHX;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgCE;AAAK,MAAA,SAAS,EAAEjG,MAAM,CAAC0G,SAAvB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,WAAW,EAAC,iFAFd;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAE9D,UAJT;AAKE,QAAA,QAAQ,EAAE4C;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEmB,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,0GAFP;AAGE,QAAA,OAAO,EAAEV;AAHX;AAAA;AAAA;AAAA;AAAA,cARF,eAaE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEU,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,IAAI,EAAC,oGAFP;AAGE,QAAA,OAAO,EAAEN;AAHX;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF,eAmDE;AAAI,MAAA,SAAS,EAAEtG,MAAM,CAAC6G,OAAtB;AAAA,gBACGlD,GAAG,IACFA,GAAG,CAACE,GAAJ,CAAQ,CAACC,IAAD,EAAO1C,KAAP,kBACN;AAAgB,QAAA,SAAS,EAAEpB,MAAM,CAAC8G,SAAlC;AAAA,mBACG/B,OAAO,KAAK,IAAZ,IACCd,WAAW,KAAK,IADjB,IAEC7C,KAAK,KAAKyD,iBAFX,iBAGG;AAAK,UAAA,SAAS,EAAE7E,MAAM,CAAC+G,cAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,MADT;AAEE,YAAA,MAAM,EAAEpE,UAFV;AAGE,YAAA,KAAK,EAAE1C,aAAa,CAACmG;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJN,EAYGrB,OAAO,KAAK,IAAZ,IACCN,WAAW,KAAK,IADjB,IAECrD,KAAK,KAAKyD,iBAFX,iBAGG;AAAK,UAAA,SAAS,EAAE7E,MAAM,CAACgH,iBAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,MADT;AAEE,YAAA,MAAM,EAAEjE,WAFV;AAGE,YAAA,KAAK,EAAE9C,aAAa,CAACmG;AAHvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfN,eAuBE;AAAK,UAAA,SAAS,EAAEpG,MAAM,CAACiH,SAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,MAAM,EAAEnD,IAAI,CAACzD,KADf;AAEE,YAAA,KAAK,EAAEyD,IAAI,CAACC,KAFd;AAGE,YAAA,KAAK,EAAE3C,KAHT;AAIE,YAAA,IAAI,EAAEsE,WAAW,CAACtE,KAAD,CAJnB;AAKE,YAAA,IAAI,EAAEuE,WAAW,CAACvE,KAAD;AALnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF,EAgCGA,KAAK,KAAKuC,GAAG,CAAC1C,MAAJ,GAAa,CAAvB,iBACC;AAAK,UAAA,SAAS,EAAEjB,MAAM,CAACkH,KAAvB;AAAA,iCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA,SAAS9F,KAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiGD,CAtVM;;GAAMsB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, ChangeEvent, useMemo } from \"react\";\nimport { TListItem, ILinkedList } from \"../../types/list\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport styles from \"./list-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\n\nexport class Node<T> {\n  value: T;\n  next: Node<T> | null;\n  constructor(value: T, next?: Node<T> | null) {\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n  private head: Node<T> | null;\n  private tail: Node<T> | null;\n  private size: number;\n  private addValues(values: T[]) {\n    values.forEach((value) => this.append(value));\n  }\n  constructor(elements: T[]) {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n    if (elements?.length) {\n      this.addValues(elements);\n    }\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  getCurr(index: number) {\n    if (index < 0 || index >= this.size) return null;\n    let counter = 0;\n    let curr = this.head;\n    while (counter !== index && curr) {\n      curr = curr?.next;\n      counter++;\n    }\n    return curr;\n  }\n\n  toArray() {\n    let curr = this.head;\n    const res = [];\n\n    while (curr) {\n      res.push(curr.value);\n      curr = curr.next;\n    }\n    return [...res];\n  }\n\n  removeHead() {\n    if (!this.head) return null;\n\n    if (this.size === 1) {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      return;\n    }\n\n    const currentHead = this.head;\n    const newHead = currentHead.next;\n    this.head = newHead;\n    this.size--;\n  }\n\n  removeTail() {\n    if (this.head == null) return null;\n\n    if (this.head.next == null) {\n      return null;\n    }\n\n    var second_last = this.head;\n    while (\n      second_last !== null &&\n      second_last.next !== null &&\n      second_last.next.next != null\n    )\n      second_last = second_last.next;\n    second_last.next = null;\n\n    return this.head;\n  }\n\n  append(element: T) {\n    let node = new Node(element);\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n      if (current) current.next = new Node(element);\n    }\n    this.size++;\n  }\n\n  prepend(element: T) {\n    const newNode = new Node(element);\n    const currentNode = this.head;\n    this.head = newNode;\n    this.head.next = currentNode;\n    this.size++;\n  }\n\n  addByIndex(element: T, index: number) {\n    const newNode = new Node(element);\n\n    if (index === 0) {\n      newNode.next = this.head;\n      this.head = newNode;\n      this.size++;\n    }\n\n    let prev = this.getCurr(index - 1);\n    if (prev?.next) {\n      let temp = prev?.next;\n      prev!.next = newNode;\n      newNode!.next = temp;\n      this.size++;\n    }\n    return;\n  }\n\n  removeByIndex(index: number) {\n    if (index === 0) return this.removeHead();\n    if (index === this.size - 1) return this.removeTail();\n    let prev = this.getCurr(index - 1);\n    if (prev?.next) {\n      let deletedNode = prev?.next;\n      prev.next = deletedNode?.next;\n      this.size--;\n      return deletedNode;\n    }\n  }\n}\n\nexport const ListPage: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n  const [circleValue, setCircleValue] = useState(\"\");\n\n  const getRandomNumber = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  };\n\n  const list = useMemo(\n    () =>\n      new LinkedList<string>(\n        Array.from({ length: 4 }, () => getRandomNumber(0, 99).toString())\n      ),\n    []\n  );\n\n  const [arr, setArr] = useState<TListItem[]>(\n    list\n      .toArray()\n      .map((item) => ({ value: item, color: ElementStates.Default }))\n  );\n  const [addedToHead, setAddedToHead] = useState(false);\n  const [removedFromHead, setRemovedFromHead] = useState(false);\n  const [addedByIndex, setAddedByIndex] = useState(false);\n  const [removedByIndex, setRemovedByIndex] = useState(false);\n  const [addedToTail, setAddedToTail] = useState(false);\n  const [removedFromTail, setRemovedFromTail] = useState(false);\n  const [indexOfInputValue, setIndexOfInputValue] = useState<number>();\n  const [loading, setLoading] = useState(false);\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndexValue(e.target.value);\n  };\n\n  const displayHead = (index: number) => {\n    if (index === 0 && !addedToHead && !addedByIndex &&!removedFromHead) {\n      return \"head\";\n    } else if (index === 0 && addedByIndex && +indexValue !== 0) {\n      return \"head\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const displayTail = (index: number) => {\n    if (\n      index === arr.length - 1 &&\n      !removedFromTail &&\n      !removedByIndex &&\n      !addedToTail\n    ) {\n      return \"tail\";\n    } else if (arr.length === 1) {\n      return \"\";\n    } else if (removedByIndex && index === arr.length - 1) {\n      return \"\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleAddToHead = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setAddedToHead(true);\n      await delay(500);\n      list.prepend(inputValue);\n      setAddedToHead(false);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[0].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[0].color = ElementStates.Default;\n      setArr(newArr);\n    }\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleAddToTail = async () => {\n    if (inputValue) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setIndexOfInputValue(list.getSize() - 1);\n      setAddedToTail(true);\n      await delay(500);\n      list.append(inputValue);\n      setAddedToTail(false);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[newArr.length - 1].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[newArr.length - 1].color = ElementStates.Default;\n      setArr(newArr);\n    }\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleRemoveFromHead = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      setCircleValue(newArr[0].value);\n      setLoading(true);\n      setRemovedFromHead(true);\n      setIndexOfInputValue(0);\n      newArr[0].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.removeHead();\n      setRemovedFromHead(false);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleRemoveFromTail = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      setCircleValue(newArr[newArr.length - 1].value);\n      setLoading(true);\n      setRemovedFromTail(true);\n      setIndexOfInputValue(list.getSize() - 1);\n      newArr[newArr.length - 1].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.removeTail();\n      setRemovedFromTail(false);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleAddByIndex = async () => {\n    if (+indexValue < 5 && list.getSize() < 6) {\n      setLoading(true);\n      setAddedByIndex(true);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      for (let i = 0; i <= +indexValue; i++) {\n        setIndexOfInputValue(i);\n        await delay(500);\n        if (i < +indexValue) {\n          newArr[i].color = ElementStates.Changing;\n          setArr(newArr);\n        }\n      }\n      setAddedByIndex(false);\n      setIndexOfInputValue(+\"\");\n      list.addByIndex(inputValue, +indexValue);\n      const finalArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      finalArr[+indexValue].color = ElementStates.Modified;\n\n      setArr(finalArr);\n      await delay(500);\n      finalArr[+indexValue].color = ElementStates.Default;\n      setArr(finalArr);\n    }\n    setLoading(false);\n    setInputValue(\"\");\n    setIndexValue(\"\");\n  };\n\n  const handleRemoveByIndex = async () => {\n    if (+indexValue < list.getSize() && +indexValue < 7) {\n      setLoading(true);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      for (let i = 0; i <= +indexValue; i++) {\n        await delay(500);\n        newArr[i].color = ElementStates.Changing;\n        setArr([...newArr]);\n      }\n      await delay(500);\n      setCircleValue(newArr[+indexValue].value);\n      newArr[+indexValue].value = \"\";\n      setRemovedByIndex(true);\n      newArr[+indexValue].color = ElementStates.Default;\n      setIndexOfInputValue(+indexValue);\n      await delay(500);\n      list.removeByIndex(+indexValue);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n      setRemovedByIndex(false);\n      setLoading(false);\n      setIndexValue(\"\");\n    }\n  };\n\n  const removeElements = (\n    head: Node<number> | null,\n    val: number\n  ): Node<number> | null => {\n    if (head === null) {\n      return null;\n    }\n\n    let dummyHead = new Node(0);\n    dummyHead.next = head;\n    head = dummyHead;\n\n    while (dummyHead.next !== null) {\n      if (dummyHead.next.value === val) {\n        dummyHead.next = dummyHead.next.next;\n      } else {\n        dummyHead = dummyHead.next;\n      }\n    }\n\n    return head.next;\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите значение\"\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Добавить в head\"\n          onClick={handleAddToHead}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Добавить в tail\"\n          onClick={handleAddToTail}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Удалить из head\"\n          onClick={handleRemoveFromHead}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Удалить из tail\"\n          onClick={handleRemoveFromTail}\n        />\n      </div>\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите индекс\"\n          type=\"text\"\n          value={indexValue}\n          onChange={onIndexChange}\n        />\n        <Button\n          style={{ minWidth: \"362px\" }}\n          text=\"Добавить по индексу\"\n          onClick={handleAddByIndex}\n        />\n        <Button\n          style={{ minWidth: \"362px\" }}\n          text=\"Удалить по индексу\"\n          onClick={handleRemoveByIndex}\n        />\n      </div>\n      <ul className={styles.circles}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index} className={styles.circlebox}>\n              {loading === true &&\n                addedToHead === true &&\n                index === indexOfInputValue && (\n                  <div className={styles.smalltopcircle}>\n                    <Circle\n                      isSmall\n                      letter={inputValue}\n                      state={ElementStates.Changing}\n                    />\n                  </div>\n                )}\n              {loading === true &&\n                addedToTail === true &&\n                index === indexOfInputValue && (\n                  <div className={styles.smallbottomcircle}>\n                    <Circle\n                      isSmall\n                      letter={circleValue}\n                      state={ElementStates.Changing}\n                    />\n                  </div>\n                )}\n              <div className={styles.bigcircle}>\n                <Circle\n                  letter={item.value}\n                  state={item.color}\n                  index={index}\n                  head={displayHead(index)}\n                  tail={displayTail(index)}\n                />\n              </div>\n              {index !== arr.length - 1 && (\n                <div className={styles.arrow}>\n                  <ArrowIcon />\n                </div>\n              )}\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}