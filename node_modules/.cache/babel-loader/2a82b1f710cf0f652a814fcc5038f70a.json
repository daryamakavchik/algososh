{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from \"react\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { delay, getRandomNumber } from \"../../utils/functions\";\nimport styles from \"./list-page.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LinkedListNode {\n  constructor(value, next) {\n    this.value = void 0;\n    this.next = void 0;\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n\n}\nexport class LinkedList {\n  addValues(values) {\n    values.forEach(value => this.append(value));\n  }\n\n  constructor(elements) {\n    this.head = void 0;\n    this.tail = void 0;\n    this.size = void 0;\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n\n    if (elements !== null && elements !== void 0 && elements.length) {\n      this.addValues(elements);\n    }\n  }\n\n  getSize() {\n    return this.size;\n  }\n\n  getCurr(index) {\n    if (index < 0 || index >= this.size) return null;\n    let counter = 0;\n    let curr = this.head;\n\n    while (counter !== index && curr) {\n      var _curr;\n\n      curr = (_curr = curr) === null || _curr === void 0 ? void 0 : _curr.next;\n      counter++;\n    }\n\n    return curr;\n  }\n\n  toArray() {\n    let curr = this.head;\n    const res = [];\n\n    while (curr) {\n      res.push(curr.value);\n      curr = curr.next;\n    }\n\n    return [...res];\n  }\n\n  deleteHead() {\n    if (!this.head) return null;\n\n    if (this.size === 1) {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      return;\n    }\n\n    const currentHead = this.head;\n    const newHead = currentHead.next;\n    this.head = newHead;\n    this.size--;\n  }\n\n  deleteTail() {\n    if (this.head == null) return null;\n\n    if (this.head.next == null) {\n      return null;\n    }\n\n    var second_last = this.head;\n\n    while (second_last !== null && second_last.next !== null && second_last.next.next != null) second_last = second_last.next;\n\n    second_last.next = null;\n    return this.head;\n  }\n\n  append(element) {\n    let node = new LinkedListNode(element);\n\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n\n      if (current) current.next = new LinkedListNode(element);\n    }\n\n    this.size++;\n  }\n\n  prepend(element) {\n    const newNode = new LinkedListNode(element);\n    const currentNode = this.head;\n    this.head = newNode;\n    this.head.next = currentNode;\n    this.size++;\n  }\n\n  addByIndex(element, index) {\n    const newNode = new LinkedListNode(element);\n\n    if (index === 0) {\n      newNode.next = this.head;\n      this.head = newNode;\n      this.size++;\n    }\n\n    let prev = this.getCurr(index - 1);\n\n    if (prev !== null && prev !== void 0 && prev.next) {\n      let temp = prev === null || prev === void 0 ? void 0 : prev.next;\n      prev.next = newNode;\n      newNode.next = temp;\n      this.size++;\n    }\n\n    return;\n  }\n\n  removeByIndex(index) {\n    if (index === 0) return this.deleteHead();\n    if (index === this.size - 1) return this.deleteTail();\n    let prev = this.getCurr(index - 1);\n\n    if (prev !== null && prev !== void 0 && prev.next) {\n      let deletedNode = prev === null || prev === void 0 ? void 0 : prev.next;\n      prev.next = deletedNode === null || deletedNode === void 0 ? void 0 : deletedNode.next;\n      this.size--;\n      return deletedNode;\n    }\n  }\n\n}\nexport const ListPage = () => {\n  _s();\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n  const [circleValue, setCircleValue] = useState(\"\");\n  const list = useMemo(() => new LinkedList(Array.from({\n    length: 4\n  }, () => getRandomNumber(0, 99).toString())), []);\n  const [arr, setArr] = useState(list.toArray().map(item => ({\n    value: item,\n    color: ElementStates.Default\n  })));\n  const [addedToHead, setAddedToHead] = useState(false);\n  const [removedFromHead, setRemovedFromHead] = useState(false);\n  const [addedByIndex, setAddedByIndex] = useState(false);\n  const [removedByIndex, setRemovedByIndex] = useState(false);\n  const [addedToTail, setAddedToTail] = useState(false);\n  const [removedFromTail, setRemovedFromTail] = useState(false);\n  const [indexOfInputValue, setIndexOfInputValue] = useState();\n  const [loading, setLoading] = useState(false);\n  const [buttons, setDisabledButtons] = useState(false);\n  const [indexButtons, setDisabledIndexButtons] = useState(false);\n\n  const onInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = e => {\n    setIndexValue(e.target.value);\n  };\n\n  const displayHead = index => {\n    if (index === 0 && !addedToHead && !addedByIndex) {\n      return \"head\";\n    }\n\n    if (circleValue || addedByIndex) {\n      return \"\";\n    }\n  };\n\n  const displayTail = index => {\n    if (index === arr.length - 1 && !removedFromTail && !removedByIndex && !addedToTail) {\n      return \"tail\";\n    } else if (arr.length === 1) {\n      return \"\";\n    } else if (removedByIndex && index === arr.length - 1) {\n      return \"\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleAddToHead = async () => {\n    if (list.getSize() > 5) {\n      setDisabledButtons(true);\n    }\n\n    if (inputValue && list.getSize() <= 5) {\n      setLoading(true);\n      setIndexOfInputValue(0);\n      setAddedToHead(true);\n      await delay(500);\n      list.prepend(inputValue);\n      setAddedToHead(false);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      newArr[0].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[0].color = ElementStates.Default;\n      setArr(newArr);\n    }\n\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleAddToTail = async () => {\n    if (list.getSize() > 5) {\n      setDisabledButtons(true);\n    }\n\n    if (inputValue && list.getSize() <= 5) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setIndexOfInputValue(list.getSize() - 1);\n      setAddedToTail(true);\n      await delay(500);\n      list.append(inputValue);\n      setAddedToTail(false);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      newArr[newArr.length - 1].color = ElementStates.Modified;\n      setArr(newArr);\n      await delay(500);\n      newArr[newArr.length - 1].color = ElementStates.Default;\n      setArr(newArr);\n    }\n\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleRemoveFromHead = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      setCircleValue(newArr[0].value);\n      setLoading(true);\n      setRemovedFromHead(true);\n      setIndexOfInputValue(0);\n      newArr[0].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.deleteHead();\n      setRemovedFromHead(false);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n    }\n\n    setLoading(false);\n  };\n\n  const handleRemoveFromTail = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      setCircleValue(newArr[newArr.length - 1].value);\n      setLoading(true);\n      setRemovedFromTail(true);\n      setIndexOfInputValue(list.getSize() - 1);\n      newArr[newArr.length - 1].value = \"\";\n      setArr(newArr);\n      await delay(500);\n      list.deleteTail();\n      setRemovedFromTail(false);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n    }\n\n    setLoading(false);\n  };\n\n  const handleAddByIndex = async () => {\n    if (list.getSize() >= 6) {\n      setDisabledIndexButtons(true);\n    }\n\n    if (+indexValue < 5 && list.getSize() < 6) {\n      setLoading(true);\n      setAddedByIndex(true);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n\n      for (let i = 0; i <= +indexValue; i++) {\n        setIndexOfInputValue(i);\n        await delay(500);\n\n        if (i < +indexValue) {\n          newArr[i].color = ElementStates.Changing;\n          setArr(newArr);\n        }\n      }\n\n      setAddedByIndex(false);\n      setIndexOfInputValue(+\"\");\n      list.addByIndex(inputValue, +indexValue);\n      const finalArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n      finalArr[+indexValue].color = ElementStates.Modified;\n      setArr(finalArr);\n      await delay(500);\n      finalArr[+indexValue].color = ElementStates.Default;\n      setArr(finalArr);\n    }\n\n    setLoading(false);\n    setInputValue(\"\");\n    setIndexValue(\"\");\n  };\n\n  const handleRemoveByIndex = async () => {\n    if (+indexValue < list.getSize() && +indexValue < 7) {\n      setLoading(true);\n      const newArr = list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      }));\n\n      for (let i = 0; i <= +indexValue; i++) {\n        await delay(500);\n        newArr[i].color = ElementStates.Changing;\n        setArr([...newArr]);\n      }\n\n      await delay(500);\n      setCircleValue(newArr[+indexValue].value);\n      newArr[+indexValue].value = \"\";\n      setRemovedByIndex(true);\n      newArr[+indexValue].color = ElementStates.Default;\n      setIndexOfInputValue(+indexValue);\n      await delay(500);\n      list.removeByIndex(+indexValue);\n      setArr(list.toArray().map(item => ({\n        value: item,\n        color: ElementStates.Default\n      })));\n      setRemovedByIndex(false);\n      setLoading(false);\n      setIndexValue(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0432\\u044F\\u0437\\u043D\\u044B\\u0439 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\",\n        maxLength: 4,\n        isLimitText: true,\n        type: \"text\",\n        value: inputValue,\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 head\",\n        onClick: handleAddToHead,\n        disabled: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 tail\",\n        onClick: handleAddToTail,\n        disabled: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 head\",\n        onClick: handleRemoveFromHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"175px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 tail\",\n        onClick: handleRemoveFromTail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          maxWidth: \"204px\"\n        },\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",\n        type: \"text\",\n        value: indexValue,\n        onChange: onIndexChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n        onClick: handleAddByIndex,\n        disabled: indexButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          minWidth: \"362px\"\n        },\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E \\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u0443\",\n        onClick: handleRemoveByIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.circles,\n      children: arr && arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.circlebox,\n        children: [loading === true && (addedToHead === true || addedToTail === true || addedByIndex === true) && index === indexOfInputValue && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.smalltopcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            isSmall: true,\n            letter: inputValue,\n            state: ElementStates.Changing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 19\n        }, this), loading === true && (removedFromTail === true || removedFromHead === true || removedByIndex === true) && index === indexOfInputValue && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.smallbottomcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            isSmall: true,\n            letter: circleValue,\n            state: ElementStates.Changing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.bigcircle,\n          children: /*#__PURE__*/_jsxDEV(Circle, {\n            letter: item.value,\n            state: item.color,\n            index: index,\n            head: displayHead(index),\n            tail: displayTail(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this), index !== arr.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.arrow,\n          children: /*#__PURE__*/_jsxDEV(ArrowIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 387,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListPage, \"fFLvxBQ9wamEAkXsWup951hMwqQ=\");\n\n_c = ListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/list-page/list-page.tsx"],"names":["React","useState","useMemo","Input","Button","Circle","ArrowIcon","SolutionLayout","ElementStates","delay","getRandomNumber","styles","LinkedListNode","constructor","value","next","undefined","LinkedList","addValues","values","forEach","append","elements","head","tail","size","length","getSize","getCurr","index","counter","curr","toArray","res","push","deleteHead","currentHead","newHead","deleteTail","second_last","element","node","current","prepend","newNode","currentNode","addByIndex","prev","temp","removeByIndex","deletedNode","ListPage","inputValue","setInputValue","indexValue","setIndexValue","circleValue","setCircleValue","list","Array","from","toString","arr","setArr","map","item","color","Default","addedToHead","setAddedToHead","removedFromHead","setRemovedFromHead","addedByIndex","setAddedByIndex","removedByIndex","setRemovedByIndex","addedToTail","setAddedToTail","removedFromTail","setRemovedFromTail","indexOfInputValue","setIndexOfInputValue","loading","setLoading","buttons","setDisabledButtons","indexButtons","setDisabledIndexButtons","onInputChange","e","target","onIndexChange","displayHead","displayTail","handleAddToHead","newArr","Modified","handleAddToTail","handleRemoveFromHead","handleRemoveFromTail","handleAddByIndex","i","Changing","finalArr","handleRemoveByIndex","container","maxWidth","minWidth","circles","circlebox","smalltopcircle","smallbottomcircle","bigcircle","arrow"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent, useMemo } from \"react\";\nimport { TListItem, ILinkedList } from \"../../types/list\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport { ArrowIcon } from \"../ui/icons/arrow-icon\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { delay, getRandomNumber } from \"../../utils/functions\";\nimport styles from \"./list-page.module.css\";\n\nexport class LinkedListNode<T> {\n  value: T;\n  next: LinkedListNode<T> | null;\n  constructor(value: T, next?: LinkedListNode<T> | null) {\n    this.value = value;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n  private head: LinkedListNode<T> | null;\n  private tail: LinkedListNode<T> | null;\n  private size: number;\n  private addValues(values: T[]) {\n    values.forEach((value) => this.append(value));\n  }\n\n  constructor(elements: T[]) {\n    this.head = null;\n    this.tail = null;\n    this.size = 0;\n    if (elements?.length) {\n      this.addValues(elements);\n    }\n  }\n\n  getSize() { return this.size }\n\n  getCurr(index: number) {\n    if (index < 0 || index >= this.size) return null;\n    let counter = 0;\n    let curr = this.head;\n    while (counter !== index && curr) {\n      curr = curr?.next;\n      counter++;\n    }\n    return curr;\n  }\n\n  toArray() {\n    let curr = this.head;\n    const res = [];\n\n    while (curr) {\n      res.push(curr.value);\n      curr = curr.next;\n    }\n    return [...res];\n  }\n\n  deleteHead() {\n    if (!this.head) return null;\n\n    if (this.size === 1) {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      return;\n    }\n\n    const currentHead = this.head;\n    const newHead = currentHead.next;\n    this.head = newHead;\n    this.size--;\n  }\n\n  deleteTail() {\n    if (this.head == null) return null;\n\n    if (this.head.next == null) {\n      return null;\n    }\n\n    var second_last = this.head;\n    while (\n      second_last !== null &&\n      second_last.next !== null &&\n      second_last.next.next != null\n    )\n      second_last = second_last.next;\n    second_last.next = null;\n\n    return this.head;\n  }\n\n  append(element: T) {\n    let node = new LinkedListNode(element);\n    if (this.size === 0) {\n      this.head = node;\n    } else {\n      let current = this.head;\n      while (current && current.next !== null) {\n        current = current.next;\n      }\n      if (current) current.next = new LinkedListNode(element);\n    }\n    this.size++;\n  }\n\n  prepend(element: T) {\n    const newNode = new LinkedListNode(element);\n    const currentNode = this.head;\n    this.head = newNode;\n    this.head.next = currentNode;\n    this.size++;\n  }\n\n  addByIndex(element: T, index: number) {\n    const newNode = new LinkedListNode(element);\n\n    if (index === 0) {\n      newNode.next = this.head;\n      this.head = newNode;\n      this.size++;\n    }\n\n    let prev = this.getCurr(index - 1);\n    if (prev?.next) {\n      let temp = prev?.next;\n      prev!.next = newNode;\n      newNode!.next = temp;\n      this.size++;\n    }\n    return;\n  }\n\n  removeByIndex(index: number) {\n    if (index === 0) return this.deleteHead();\n    if (index === this.size - 1) return this.deleteTail();\n    let prev = this.getCurr(index - 1);\n    if (prev?.next) {\n      let deletedNode = prev?.next;\n      prev.next = deletedNode?.next;\n      this.size--;\n      return deletedNode;\n    }\n  }\n}\n\nexport const ListPage: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [indexValue, setIndexValue] = useState(\"\");\n  const [circleValue, setCircleValue] = useState(\"\");\n\n  const list = useMemo(\n    () =>\n      new LinkedList<string>(\n        Array.from({ length: 4 }, () => getRandomNumber(0, 99).toString())\n      ),\n    []\n  );\n\n  const [arr, setArr] = useState<TListItem[]>(\n    list\n      .toArray()\n      .map((item) => ({ value: item, color: ElementStates.Default }))\n  );\n\n  const [addedToHead, setAddedToHead] = useState(false);\n  const [removedFromHead, setRemovedFromHead] = useState(false);\n  const [addedByIndex, setAddedByIndex] = useState(false);\n  const [removedByIndex, setRemovedByIndex] = useState(false);\n  const [addedToTail, setAddedToTail] = useState(false);\n  const [removedFromTail, setRemovedFromTail] = useState(false);\n  const [indexOfInputValue, setIndexOfInputValue] = useState<number>();\n  const [loading, setLoading] = useState(false);\n  const [buttons, setDisabledButtons] = useState(false);\n  const [indexButtons, setDisabledIndexButtons] = useState(false);\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const onIndexChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setIndexValue(e.target.value);\n  };\n\n  const displayHead = (index: number) => {\n    if (index === 0 && !addedToHead && !addedByIndex) {\n      return \"head\";\n    }\n    if (circleValue || addedByIndex) {\n      return \"\";\n    }\n  };\n\n  const displayTail = (index: number) => {\n    if (\n      index === arr.length - 1 &&\n      !removedFromTail &&\n      !removedByIndex &&\n      !addedToTail\n    ) {\n      return \"tail\";\n    } else if (arr.length === 1) {\n      return \"\";\n    } else if (removedByIndex && index === arr.length - 1) {\n      return \"\";\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleAddToHead = async () => {\n    if (list.getSize() > 5) {\n      setDisabledButtons(true);\n    }\n    if (inputValue && list.getSize() <= 5) {\n      setLoading(true);\n      setIndexOfInputValue(0);\n      setAddedToHead(true);\n\n      await delay(500);\n      list.prepend(inputValue);\n      setAddedToHead(false);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[0].color = ElementStates.Modified;\n      setArr(newArr);\n\n      await delay(500);\n      newArr[0].color = ElementStates.Default;\n      setArr(newArr);\n    }\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleAddToTail = async () => {\n    if (list.getSize() > 5) {\n      setDisabledButtons(true);\n    }\n    if (inputValue && list.getSize() <= 5) {\n      setLoading(true);\n      setInputValue(inputValue);\n      setIndexOfInputValue(list.getSize() - 1);\n      setAddedToTail(true);\n\n      await delay(500);\n      list.append(inputValue);\n      setAddedToTail(false);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      newArr[newArr.length - 1].color = ElementStates.Modified;\n      setArr(newArr);\n\n      await delay(500);\n      newArr[newArr.length - 1].color = ElementStates.Default;\n      setArr(newArr);\n    }\n    setInputValue(\"\");\n    setLoading(false);\n  };\n\n  const handleRemoveFromHead = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      setCircleValue(newArr[0].value);\n      setLoading(true);\n      setRemovedFromHead(true);\n      setIndexOfInputValue(0);\n      newArr[0].value = \"\";\n      setArr(newArr);\n\n      await delay(500);\n      list.deleteHead();\n      setRemovedFromHead(false);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleRemoveFromTail = async () => {\n    if (list.getSize() > 0) {\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      setCircleValue(newArr[newArr.length - 1].value);\n      setLoading(true);\n      setRemovedFromTail(true);\n      setIndexOfInputValue(list.getSize() - 1);\n      newArr[newArr.length - 1].value = \"\";\n      setArr(newArr);\n\n      await delay(500);\n      list.deleteTail();\n      setRemovedFromTail(false);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleAddByIndex = async () => {\n    if (list.getSize() >= 6) {\n      setDisabledIndexButtons(true);\n    }\n    if (+indexValue < 5 && list.getSize() < 6) {\n      setLoading(true);\n      setAddedByIndex(true);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      for (let i = 0; i <= +indexValue; i++) {\n        setIndexOfInputValue(i);\n\n        await delay(500);\n        if (i < +indexValue) {\n          newArr[i].color = ElementStates.Changing;\n          setArr(newArr);\n        }\n      }\n      setAddedByIndex(false);\n      setIndexOfInputValue(+\"\");\n      list.addByIndex(inputValue, +indexValue);\n      const finalArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      finalArr[+indexValue].color = ElementStates.Modified;\n\n      setArr(finalArr);\n\n      await delay(500);\n      finalArr[+indexValue].color = ElementStates.Default;\n      setArr(finalArr);\n    }\n    setLoading(false);\n    setInputValue(\"\");\n    setIndexValue(\"\");\n  };\n\n  const handleRemoveByIndex = async () => {\n    if (+indexValue < list.getSize() && +indexValue < 7) {\n      setLoading(true);\n      const newArr = list\n        .toArray()\n        .map((item) => ({ value: item, color: ElementStates.Default }));\n      for (let i = 0; i <= +indexValue; i++) {\n        await delay(500);\n        newArr[i].color = ElementStates.Changing;\n        setArr([...newArr]);\n      }\n\n      await delay(500);\n      setCircleValue(newArr[+indexValue].value);\n      newArr[+indexValue].value = \"\";\n      setRemovedByIndex(true);\n      newArr[+indexValue].color = ElementStates.Default;\n      setIndexOfInputValue(+indexValue);\n      \n      await delay(500);\n      list.removeByIndex(+indexValue);\n      setArr(\n        list\n          .toArray()\n          .map((item) => ({ value: item, color: ElementStates.Default }))\n      );\n      setRemovedByIndex(false);\n      setLoading(false);\n      setIndexValue(\"\");\n    }\n  };\n\n  return (\n    <SolutionLayout title=\"Связный список\">\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите значение\"\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onInputChange}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Добавить в head\"\n          onClick={handleAddToHead}\n          disabled={buttons}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Добавить в tail\"\n          onClick={handleAddToTail}\n          disabled={buttons}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Удалить из head\"\n          onClick={handleRemoveFromHead}\n        />\n        <Button\n          style={{ minWidth: \"175px\" }}\n          text=\"Удалить из tail\"\n          onClick={handleRemoveFromTail}\n        />\n      </div>\n      <div className={styles.container}>\n        <Input\n          style={{ maxWidth: \"204px\" }}\n          placeholder=\"Введите индекс\"\n          type=\"text\"\n          value={indexValue}\n          onChange={onIndexChange}\n        />\n        <Button\n          style={{ minWidth: \"362px\" }}\n          text=\"Добавить по индексу\"\n          onClick={handleAddByIndex}\n          disabled={indexButtons}\n        />\n        <Button\n          style={{ minWidth: \"362px\" }}\n          text=\"Удалить по индексу\"\n          onClick={handleRemoveByIndex}\n        />\n      </div>\n      <ul className={styles.circles}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index} className={styles.circlebox}>\n              {loading === true &&\n                (addedToHead === true ||\n                  addedToTail === true ||\n                  addedByIndex === true) &&\n                index === indexOfInputValue && (\n                  <div className={styles.smalltopcircle}>\n                    <Circle\n                      isSmall\n                      letter={inputValue}\n                      state={ElementStates.Changing}\n                    />\n                  </div>\n                )}\n              {loading === true &&\n                (removedFromTail === true ||\n                  removedFromHead === true ||\n                  removedByIndex === true) &&\n                index === indexOfInputValue && (\n                  <div className={styles.smallbottomcircle}>\n                    <Circle\n                      isSmall\n                      letter={circleValue}\n                      state={ElementStates.Changing}\n                    />\n                  </div>\n                )}\n              <div className={styles.bigcircle}>\n                <Circle\n                  letter={item.value}\n                  state={item.color}\n                  index={index}\n                  head={displayHead(index)}\n                  tail={displayTail(index)}\n                />\n              </div>\n              {index !== arr.length - 1 && (\n                <div className={styles.arrow}>\n                  <ArrowIcon />\n                </div>\n              )}\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}