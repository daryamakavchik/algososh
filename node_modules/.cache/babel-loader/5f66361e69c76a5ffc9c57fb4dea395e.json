{"ast":null,"code":"export const delay = ms => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\nexport const swap = (arr, firstIndex, secondIndex) => {\n  const temp = arr[firstIndex];\n  arr[firstIndex] = arr[secondIndex];\n  arr[secondIndex] = temp;\n  return arr;\n};\nexport const countFibonacci = n => {\n  let arr = [0, 1];\n\n  for (let i = 2; i < n + 1; i++) {\n    arr.push(arr[i - 2] + arr[i - 1]);\n  }\n\n  return arr;\n};","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/utils/functions.ts"],"names":["delay","ms","Promise","resolve","setTimeout","swap","arr","firstIndex","secondIndex","temp","countFibonacci","n","i","push"],"mappings":"AAEA,OAAO,MAAMA,KAAK,GAAIC,EAAD,IAAgB;AACnC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAnC,CAAP;AACD,CAFM;AAIP,OAAO,MAAMI,IAAI,GAAG,CAACC,GAAD,EAAgBC,UAAhB,EAAoCC,WAApC,KAA4D;AAC5E,QAAMC,IAAI,GAAGH,GAAG,CAACC,UAAD,CAAhB;AACAD,EAAAA,GAAG,CAACC,UAAD,CAAH,GAAkBD,GAAG,CAACE,WAAD,CAArB;AACAF,EAAAA,GAAG,CAACE,WAAD,CAAH,GAAmBC,IAAnB;AACA,SAAOH,GAAP;AACD,CALI;AAOP,OAAO,MAAMI,cAAc,GAAIC,CAAD,IAAyB;AACrD,MAAIL,GAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAApB;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,GAAG,CAAxB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9BN,IAAAA,GAAG,CAACO,IAAJ,CAASP,GAAG,CAACM,CAAC,GAAG,CAAL,CAAH,GAAaN,GAAG,CAACM,CAAC,GAAG,CAAL,CAAzB;AACD;;AACD,SAAON,GAAP;AACD,CANM","sourcesContent":["import { TArray } from \"../types/string\";\n\nexport const delay = (ms: number) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport const swap = (arr: TArray[], firstIndex: number, secondIndex: number) => {\n    const temp = arr[firstIndex];\n    arr[firstIndex] = arr[secondIndex];\n    arr[secondIndex] = temp;\n    return arr;\n  };\n\nexport const countFibonacci = (n: number): number[] => {\n  let arr: number[] = [0, 1];\n  for (let i = 2; i < n + 1; i++) {\n    arr.push(arr[i - 2] + arr[i - 1]);\n  }\n  return arr;\n};\n"]},"metadata":{},"sourceType":"module"}