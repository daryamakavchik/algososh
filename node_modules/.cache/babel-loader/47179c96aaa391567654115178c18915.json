{"ast":null,"code":"var _jsxFileName = \"/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from \"./stack-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Stack {\n  constructor() {\n    this.container = [];\n\n    this.push = item => {\n      this.container.push(item);\n    };\n\n    this.pop = () => {\n      this.container.pop();\n    };\n\n    this.peek = () => {\n      return this.container[this.container.length - 1];\n    };\n\n    this.clear = () => {\n      this.container = [];\n    };\n\n    this.getSize = () => this.container.length;\n\n    this.getElements = () => this.container;\n  }\n\n}\nexport const StackPage = () => {\n  _s();\n\n  const [arr, setArr] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [stack] = useState(new Stack());\n\n  const delay = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddNumber = async () => {\n    if (inputValue) {\n      stack.push({\n        value: inputValue,\n        color: ElementStates.Changing\n      });\n      setInputValue(\"\");\n      setArr([...stack.getElements()]);\n      await delay(500);\n      stack.peek().color = ElementStates.Default;\n      setArr([...stack.getElements()]);\n    }\n  };\n\n  const handleDeleteNumber = async () => {\n    stack.peek().color = ElementStates.Default;\n    setArr([...stack.getElements()]);\n    await delay(500);\n    stack.pop();\n    setArr([...stack.getElements()]);\n  };\n\n  const handleClearStack = () => {\n    stack.clear();\n    setArr([...stack.getElements()]);\n  };\n\n  const addIndex = (index, arr) => {\n    if (index === arr.length - 1) {\n      return \"top\";\n    } else {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SolutionLayout, {\n    title: \"\\u0421\\u0442\\u0435\\u043A\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        maxLength: 4,\n        isLimitText: true,\n        type: \"text\",\n        value: inputValue,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        onClick: handleAddNumber,\n        disabled: inputValue === \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n        onClick: handleDeleteNumber,\n        disabled: !arr.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n        onClick: handleClearStack,\n        disabled: !arr.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.circles,\n      children: arr && arr.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Circle, {\n          letter: item.value,\n          state: item.color,\n          index: index,\n          head: addIndex(index, arr)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StackPage, \"Kv1nQ0dkmnnc9DK4yxJIU0AM8Dw=\");\n\n_c = StackPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackPage\");","map":{"version":3,"sources":["/Users/daryamakauchyk/Desktop/algososh/src/components/stack-page/stack-page.tsx"],"names":["React","useState","Input","Button","Circle","styles","ElementStates","SolutionLayout","Stack","container","push","item","pop","peek","length","clear","getSize","getElements","StackPage","arr","setArr","inputValue","setInputValue","stack","delay","ms","Promise","resolve","setTimeout","onChange","e","target","value","handleAddNumber","color","Changing","Default","handleDeleteNumber","handleClearStack","addIndex","index","circles","map"],"mappings":"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","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\nimport { TStackItem, IStack } from \"../../types/stack\";\nimport { Input } from \"../ui/input/input\";\nimport { Button } from \"../ui/button/button\";\nimport { Circle } from \"../ui/circle/circle\";\nimport styles from \"./stack-page.module.css\";\nimport { ElementStates } from \"../../types/element-states\";\nimport { SolutionLayout } from \"../ui/solution-layout/solution-layout\";\n\nexport class Stack<T> implements IStack<T> {\n  private container: T[] = [];\n\n  push = (item: T): void => {\n    this.container.push(item);\n  };\n\n  pop = (): void => {\n    this.container.pop();\n  };\n\n  peek = (): T => {\n      return this.container[this.container.length - 1];\n  };\n\n  clear = (): void => {\n    this.container = [];\n  };\n\n  getSize = () => this.container.length;\n  getElements = () => this.container;\n}\n\nexport const StackPage: React.FC = () => {\n  const [arr, setArr] = useState<TStackItem[]>([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [stack] = useState(new Stack<TStackItem>());\n\n  const delay = (ms: number) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleAddNumber = async () => {\n    if (inputValue) {\n      stack.push({ value: inputValue, color: ElementStates.Changing });\n      setInputValue(\"\");\n      setArr([...stack.getElements()]);\n      await delay(500);\n      stack.peek().color = ElementStates.Default;\n      setArr([...stack.getElements()]);\n    }\n  };\n\n  const handleDeleteNumber = async () => {\n    stack.peek().color = ElementStates.Default;\n    setArr([...stack.getElements()]);\n    await delay(500);\n    stack.pop();\n    setArr([...stack.getElements()]);\n  };\n\n  const handleClearStack = () => {\n    stack.clear();\n    setArr([...stack.getElements()]);\n  };\n\n  const addIndex = (index: number, arr: TStackItem[]): string => {\n    if (index === arr.length - 1) {\n      return \"top\";\n    } else {\n      return \"\";\n    }\n  };\n\n  return (\n    <SolutionLayout title=\"Стек\">\n      <div className={styles.container}>\n        <Input\n          maxLength={4}\n          isLimitText={true}\n          type=\"text\"\n          value={inputValue}\n          onChange={onChange}\n        />\n        <Button\n          text=\"Добавить\"\n          onClick={handleAddNumber}\n          disabled={inputValue === \"\"}\n        />\n        <Button\n          text=\"Удалить\"\n          onClick={handleDeleteNumber}\n          disabled={!arr.length}\n        />\n        <Button\n          text=\"Очистить\"\n          onClick={handleClearStack}\n          disabled={!arr.length}\n        />\n      </div>\n      <ul className={styles.circles}>\n        {arr &&\n          arr.map((item, index) => (\n            <li key={index}>\n              <Circle\n                letter={item.value}\n                state={item.color}\n                index={index}\n                head={addIndex(index, arr)}\n              />\n            </li>\n          ))}\n      </ul>\n    </SolutionLayout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}